/* MIT License
 * 
 * Copyright (c) 2024 Joshua Horvath
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package com.horvath.cobbler.gui.syntax;

import javax.swing.text.Segment;

import org.fife.ui.rsyntaxtextarea.AbstractTokenMaker;
import org.fife.ui.rsyntaxtextarea.RSyntaxUtilities;

import org.fife.ui.rsyntaxtextarea.Token;
import org.fife.ui.rsyntaxtextarea.TokenMap;

public class CobolTokenMaker extends AbstractTokenMaker {
	protected Segment s;

	protected int start; // Just for states.
	protected int offsetShift; // As parser always starts at 0, but our line doesn't.

	int currentTokenStart;
	int currentTokenType;

	/**
	 * Returns a list of tokens representing the given text.
	 * Copied from RSyntaxTextArea tutorial. 
	 *
	 * @param text The text to break into tokens.
	 * @param startTokenType The token with which to start tokenizing.
	 * @param startOffset The offset at which the line of tokens begins.
	 * @return A linked list of tokens representing <code>text</code>.
	 * @author bobbylight
	 */
	public Token getTokenList(Segment text, int startTokenType, int startOffset) {

	   resetTokenList();

	   char[] array = text.array;
	   int offset = text.offset;
	   int count = text.count;
	   int end = offset + count;

	   // Token starting offsets are always of the form:
	   // 'startOffset + (currentTokenStart-offset)', but since startOffset and
	   // offset are constant, tokens' starting positions become:
	   // 'newStartOffset+currentTokenStart'.
	   int newStartOffset = startOffset - offset;

	   currentTokenStart = offset;
	   currentTokenType  = startTokenType;

	   final int commentMarkerPosition = 6; 
	   
	   for (int i=offset; i<end; i++) {

	      char c = array[i];
	      
			if ((offset + commentMarkerPosition) < array.length - 1)
				// parse out comment tokens, either character in column 7
				if (array[offset + commentMarkerPosition] == '*' || array[offset + commentMarkerPosition] == '/') {
					if (i >= offset + commentMarkerPosition && i < end - 1) {
						currentTokenType = Token.COMMENT_MULTILINE;
					} else if (i == end - 1) {
						currentTokenType = Token.COMMENT_EOL;
					}
				}

	      switch (currentTokenType) {

	         case Token.NULL:

	            currentTokenStart = i;   // Starting a new token here.

	            switch (c) {

	               case ' ':
	               case '\t':
	                  currentTokenType = Token.WHITESPACE;
	                  break;

	               case '"':
	                  currentTokenType = Token.LITERAL_STRING_DOUBLE_QUOTE;
	                  break;

	               default:
	                  if (RSyntaxUtilities.isDigit(c)) {
	                     currentTokenType = Token.LITERAL_NUMBER_DECIMAL_INT;
	                     break;
	                  }
	                  else if (RSyntaxUtilities.isLetter(c) || c=='/' || c=='_') {
	                     currentTokenType = Token.IDENTIFIER;
	                     break;
	                  }
	                  
	                  // Anything not currently handled - mark as an identifier
	                  currentTokenType = Token.IDENTIFIER;
	                  break;

	            } // End of switch (c).

	            break;

	         case Token.WHITESPACE:

	            switch (c) {

	               case ' ':
	               case '\t':
	                  break;   // Still whitespace.

	               case '"':
	                  addToken(text, currentTokenStart,i-1, Token.WHITESPACE, newStartOffset+currentTokenStart);
	                  currentTokenStart = i;
	                  currentTokenType = Token.LITERAL_STRING_DOUBLE_QUOTE;
	                  break;

	               case '#':
	                  addToken(text, currentTokenStart,i-1, Token.WHITESPACE, newStartOffset+currentTokenStart);
	                  currentTokenStart = i;
	                  currentTokenType = Token.COMMENT_EOL;
	                  break;

	               default:   // Add the whitespace token and start anew.

	                  addToken(text, currentTokenStart,i-1, Token.WHITESPACE, newStartOffset+currentTokenStart);
	                  currentTokenStart = i;

	                  if (RSyntaxUtilities.isDigit(c)) {
	                     currentTokenType = Token.LITERAL_NUMBER_DECIMAL_INT;
	                     break;
	                  }
	                  else if (RSyntaxUtilities.isLetter(c) || c=='/' || c=='_') {
	                     currentTokenType = Token.IDENTIFIER;
	                     break;
	                  }

	                  // Anything not currently handled - mark as identifier
	                  currentTokenType = Token.IDENTIFIER;

	            } // End of switch (c).

	            break;

	         default: // Should never happen
	         case Token.IDENTIFIER:

	            switch (c) {

	               case ' ':
	               case '\t':
	                  addToken(text, currentTokenStart,i-1, Token.IDENTIFIER, newStartOffset+currentTokenStart);
	                  currentTokenStart = i;
	                  currentTokenType = Token.WHITESPACE;
	                  break;

	               case '"':
	                  addToken(text, currentTokenStart,i-1, Token.IDENTIFIER, newStartOffset+currentTokenStart);
	                  currentTokenStart = i;
	                  currentTokenType = Token.LITERAL_STRING_DOUBLE_QUOTE;
	                  break;

	               default:
	                  if (RSyntaxUtilities.isLetterOrDigit(c) || c=='/' || c=='_') {
	                     break;   // Still an identifier of some type.
	                  }
	                  // Otherwise, we're still an identifier (?).

	            } // End of switch (c).

	            break;

	         case Token.LITERAL_NUMBER_DECIMAL_INT:

	            switch (c) {

	               case ' ':
	               case '\t':
	                  addToken(text, currentTokenStart,i-1, Token.LITERAL_NUMBER_DECIMAL_INT, newStartOffset+currentTokenStart);
	                  currentTokenStart = i;
	                  currentTokenType = Token.WHITESPACE;
	                  break;

	               case '"':
	                  addToken(text, currentTokenStart,i-1, Token.LITERAL_NUMBER_DECIMAL_INT, newStartOffset+currentTokenStart);
	                  currentTokenStart = i;
	                  currentTokenType = Token.LITERAL_STRING_DOUBLE_QUOTE;
	                  break;

	               default:

	                  if (RSyntaxUtilities.isDigit(c)) {
	                     break;   // Still a literal number.
	                  }

	                  // Otherwise, remember this was a number and start over.
	                  addToken(text, currentTokenStart,i-1, Token.LITERAL_NUMBER_DECIMAL_INT, newStartOffset+currentTokenStart);
	                  i--;
	                  currentTokenType = Token.NULL;

	            } // End of switch (c).

	            break;

	         case Token.COMMENT_KEYWORD:
		            i = end - 1;
		            addToken(text, currentTokenStart,i, currentTokenType, newStartOffset+currentTokenStart);
		            currentTokenType = Token.NULL;
		            break;

	         case Token.COMMENT_MULTILINE:
		            i = end - 1;
		            addToken(text, currentTokenStart,i, currentTokenType, newStartOffset+currentTokenStart);
		            currentTokenType = Token.NULL;
		            break;

	         case Token.COMMENT_MARKUP:
		            i = end - 1;
		            addToken(text, currentTokenStart,i, currentTokenType, newStartOffset+currentTokenStart);
		            currentTokenType = Token.NULL;
		            break;
		            
	         case Token.COMMENT_DOCUMENTATION:
		            i = end - 1;
		            addToken(text, currentTokenStart,i, currentTokenType, newStartOffset+currentTokenStart);
		            // We need to set token type to null so at the bottom we don't add one more token.
		            currentTokenType = Token.NULL;
		            break;
		            
	         case Token.COMMENT_EOL:
	            i = end - 1;
	            addToken(text, currentTokenStart,i, currentTokenType, newStartOffset+currentTokenStart);
	            // We need to set token type to null so at the bottom we don't add one more token.
	            currentTokenType = Token.NULL;
	            break;

	         case Token.LITERAL_STRING_DOUBLE_QUOTE:
	            if (c=='"') {
	               addToken(text, currentTokenStart,i, Token.LITERAL_STRING_DOUBLE_QUOTE, newStartOffset+currentTokenStart);
	               currentTokenType = Token.NULL;
	            }
	            break;

	      } // End of switch (currentTokenType).

	   } // End of for (int i=offset; i<end; i++).

	   switch (currentTokenType) {

	      // Remember what token type to begin the next line with.
	      case Token.LITERAL_STRING_DOUBLE_QUOTE:
	         addToken(text, currentTokenStart,end-1, currentTokenType, newStartOffset+currentTokenStart);
	         break;

	      // Do nothing if everything was okay.
	      case Token.NULL:
	         addNullToken();
	         break;

	      // All other token types don't continue to the next line...
	      default:
	         addToken(text, currentTokenStart,end-1, currentTokenType, newStartOffset+currentTokenStart);
	         addNullToken();

	   }

	   // Return the first token in our linked list.
	   return firstToken;

	}

	@Override
	public void addToken(Segment segment, int start, int end, int tokenType, int startOffset) {
		// This assumes all keywords, etc. were parsed as "identifiers."
		if (tokenType == Token.IDENTIFIER) {
			int value = wordsToHighlight.get(segment, start, end);
			if (value != -1) {
				tokenType = value;
			}
		}
		super.addToken(segment, start, end, tokenType, startOffset);
	}

	@Override
	public TokenMap getWordsToHighlight() {

		TokenMap tokenMap = new TokenMap();

		tokenMap.put("-", Token.OPERATOR);
		tokenMap.put("*", Token.OPERATOR);
		tokenMap.put("/", Token.OPERATOR);
		tokenMap.put("**", Token.OPERATOR);
		tokenMap.put(">", Token.OPERATOR);
		tokenMap.put("<", Token.OPERATOR);
		tokenMap.put("=", Token.OPERATOR);
		tokenMap.put("==", Token.OPERATOR);
		tokenMap.put(">=", Token.OPERATOR);
		tokenMap.put("<=", Token.OPERATOR);
		tokenMap.put("<>", Token.OPERATOR);
		tokenMap.put("*>", Token.OPERATOR);
		tokenMap.put(">>", Token.OPERATOR);
		
		tokenMap.put("ACCEPT", Token.RESERVED_WORD);
		tokenMap.put("ACCESS", Token.RESERVED_WORD);
		tokenMap.put("ADD", Token.RESERVED_WORD);
		tokenMap.put("ADDRESS", Token.RESERVED_WORD);
		tokenMap.put("ADVANCING", Token.RESERVED_WORD);
		tokenMap.put("AFTER", Token.RESERVED_WORD);
		tokenMap.put("ALL", Token.RESERVED_WORD);
		tokenMap.put("ALLOWING", Token.RESERVED_WORD);
		tokenMap.put("ALPHABET", Token.RESERVED_WORD);
		tokenMap.put("ALPHABETIC", Token.RESERVED_WORD);
		tokenMap.put("ALPHABETIC--LOWER", Token.RESERVED_WORD);
		tokenMap.put("ALPHABETIC--UPPER", Token.RESERVED_WORD);
		tokenMap.put("ALPHANUMERIC", Token.RESERVED_WORD);
		tokenMap.put("ALPHANUMERIC--EDITED", Token.RESERVED_WORD);
		tokenMap.put("ALSO", Token.RESERVED_WORD);
		tokenMap.put("ALTER", Token.RESERVED_WORD);
		tokenMap.put("ALTERNATE", Token.RESERVED_WORD);
		tokenMap.put("AND", Token.RESERVED_WORD);
		tokenMap.put("ANY", Token.RESERVED_WORD);
		tokenMap.put("APPLY", Token.RESERVED_WORD);
		tokenMap.put("ARE", Token.RESERVED_WORD);
		tokenMap.put("AREA", Token.RESERVED_WORD);
		tokenMap.put("AREAS", Token.RESERVED_WORD);
		tokenMap.put("ASCENDING", Token.RESERVED_WORD);
		tokenMap.put("ASSIGN", Token.RESERVED_WORD);
		tokenMap.put("AT", Token.RESERVED_WORD);
		tokenMap.put("AUTHOR", Token.RESERVED_WORD);
		tokenMap.put("AUTHOR.", Token.RESERVED_WORD);
		tokenMap.put("AUTO [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("AUTOMATIC", Token.RESERVED_WORD);
		tokenMap.put("AUTOTERMINATE", Token.RESERVED_WORD);
		tokenMap.put("BACKGROUND-COLOR [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("BATCH", Token.RESERVED_WORD);
		tokenMap.put("BEFORE", Token.RESERVED_WORD);
		tokenMap.put("BEGINNING", Token.RESERVED_WORD);
		tokenMap.put("BELL [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("BINARY", Token.RESERVED_WORD);
		tokenMap.put("BINARY-CHAR [200X]", Token.RESERVED_WORD);
		tokenMap.put("BINARY-DOUBLE [200X]", Token.RESERVED_WORD);
		tokenMap.put("BINARY-LONG [200X]", Token.RESERVED_WORD);
		tokenMap.put("BINARY-SHORT [200X]", Token.RESERVED_WORD);
		tokenMap.put("BIT", Token.RESERVED_WORD);
		tokenMap.put("BITS", Token.RESERVED_WORD);
		tokenMap.put("BLANK", Token.RESERVED_WORD);
		tokenMap.put("BLINK [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("BLINKING", Token.RESERVED_WORD);
		tokenMap.put("BLOCK", Token.RESERVED_WORD);
		tokenMap.put("BOLD", Token.RESERVED_WORD);
		tokenMap.put("BOOLEAN", Token.RESERVED_WORD);
		tokenMap.put("BOTTOM", Token.RESERVED_WORD);
		tokenMap.put("BY", Token.RESERVED_WORD);
		tokenMap.put("CALL", Token.RESERVED_WORD);
		tokenMap.put("CANCEL", Token.RESERVED_WORD);
		tokenMap.put("CD", Token.RESERVED_WORD);
		tokenMap.put("CF", Token.RESERVED_WORD);
		tokenMap.put("CH", Token.RESERVED_WORD);
		tokenMap.put("CHANGED", Token.RESERVED_WORD);
		tokenMap.put("CHARACTER", Token.RESERVED_WORD);
		tokenMap.put("CHARACTERS", Token.RESERVED_WORD);
		tokenMap.put("CLASS", Token.RESERVED_WORD);
		tokenMap.put("CLOCK-UNITS", Token.RESERVED_WORD);
		tokenMap.put("CLOSE", Token.RESERVED_WORD);
		tokenMap.put("COBOL", Token.RESERVED_WORD);
		tokenMap.put("CODE", Token.RESERVED_WORD);
		tokenMap.put("CODE-SET", Token.RESERVED_WORD);
		tokenMap.put("COL [200X]", Token.RESERVED_WORD);
		tokenMap.put("COLLATING", Token.RESERVED_WORD);
		tokenMap.put("COLUMN", Token.RESERVED_WORD);
		tokenMap.put("COMMA", Token.RESERVED_WORD);
		tokenMap.put("COMMIT", Token.RESERVED_WORD);
		tokenMap.put("COMMON", Token.RESERVED_WORD);
		tokenMap.put("COMMUNICATION", Token.RESERVED_WORD);
		tokenMap.put("COMP", Token.RESERVED_WORD);
		tokenMap.put("COMP-1", Token.RESERVED_WORD);
		tokenMap.put("COMP-2", Token.RESERVED_WORD);
		tokenMap.put("COMP-3", Token.RESERVED_WORD);
		tokenMap.put("COMP-4", Token.RESERVED_WORD);
		tokenMap.put("COMP-5", Token.RESERVED_WORD);
		tokenMap.put("COMP-6", Token.RESERVED_WORD);
		tokenMap.put("COMP-X", Token.RESERVED_WORD);
		tokenMap.put("COMPUTATIONAL", Token.RESERVED_WORD);
		tokenMap.put("COMPUTATIONAL-1", Token.RESERVED_WORD);
		tokenMap.put("COMPUTATIONAL-2", Token.RESERVED_WORD);
		tokenMap.put("COMPUTATIONAL-3", Token.RESERVED_WORD);
		tokenMap.put("COMPUTATIONAL-4", Token.RESERVED_WORD);
		tokenMap.put("COMPUTATIONAL-5", Token.RESERVED_WORD);
		tokenMap.put("COMPUTATIONAL-6", Token.RESERVED_WORD);
		tokenMap.put("COMPUTATIONAL-X", Token.RESERVED_WORD);
		tokenMap.put("COMPUTE", Token.RESERVED_WORD);
		tokenMap.put("CONCURRENT", Token.RESERVED_WORD);
		tokenMap.put("CONFIGURATION", Token.RESERVED_WORD);
		tokenMap.put("CONFIGURATION SECTION.", Token.RESERVED_WORD);
		tokenMap.put("CONNECT", Token.RESERVED_WORD);
		tokenMap.put("CONTAIN", Token.RESERVED_WORD);
		tokenMap.put("CONTAINS", Token.RESERVED_WORD);
		tokenMap.put("CONTENT", Token.RESERVED_WORD);
		tokenMap.put("CONTINUE", Token.RESERVED_WORD);
		tokenMap.put("CONTROL", Token.RESERVED_WORD);
		tokenMap.put("CONTROLS", Token.RESERVED_WORD);
		tokenMap.put("CONVERSION", Token.RESERVED_WORD);
		tokenMap.put("CONVERTING", Token.RESERVED_WORD);
		tokenMap.put("COPY", Token.RESERVED_WORD);
		tokenMap.put("CORE-INDEX", Token.RESERVED_WORD);
		tokenMap.put("CORR", Token.RESERVED_WORD);
		tokenMap.put("CORRESPONDING", Token.RESERVED_WORD);
		tokenMap.put("COUNT", Token.RESERVED_WORD);
		tokenMap.put("CRT", Token.RESERVED_WORD);
		tokenMap.put("CURRENCY", Token.RESERVED_WORD);
		tokenMap.put("CURRENT", Token.RESERVED_WORD);
		tokenMap.put("CURSOR", Token.RESERVED_WORD);
		tokenMap.put("DATA", Token.RESERVED_WORD);
		tokenMap.put("DATA DIVISION", Token.RESERVED_WORD);
		tokenMap.put("DATA DIVISION.", Token.RESERVED_WORD);
		tokenMap.put("DATE", Token.RESERVED_WORD);
		tokenMap.put("DATE-COMPILED", Token.RESERVED_WORD);
		tokenMap.put("DATE-WRITTEN", Token.RESERVED_WORD);
		tokenMap.put("DATE-WRITTEN.", Token.RESERVED_WORD);
		tokenMap.put("DAY", Token.RESERVED_WORD);
		tokenMap.put("DAY-OF-WEEK", Token.RESERVED_WORD);
		tokenMap.put("DB", Token.RESERVED_WORD);
		tokenMap.put("DB-ACCESS-CONTROL-KEY", Token.RESERVED_WORD);
		tokenMap.put("DB-CONDITION", Token.RESERVED_WORD);
		tokenMap.put("DB-CURRENT-RECORD-ID", Token.RESERVED_WORD);
		tokenMap.put("DB-CURRENT-RECORD-NAME", Token.RESERVED_WORD);
		tokenMap.put("DB-EXCEPTION", Token.RESERVED_WORD);
		tokenMap.put("DB-KEY", Token.RESERVED_WORD);
		tokenMap.put("DB-RECORD-NAME", Token.RESERVED_WORD);
		tokenMap.put("DB-SET-NAME", Token.RESERVED_WORD);
		tokenMap.put("DB-STATUS", Token.RESERVED_WORD);
		tokenMap.put("DB-UWA", Token.RESERVED_WORD);
		tokenMap.put("DBCS", Token.RESERVED_WORD);
		tokenMap.put("DBKEY", Token.RESERVED_WORD);
		tokenMap.put("DE", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-CONTENTS", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-ITEM", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-LENGTH", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-LINE", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-NAME", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-NUMERIC-CONTENTS", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-SIZE", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-START", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-SUB", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-SUB-1", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-SUB-2", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-SUB-3", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-SUB-ITEM", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-SUB-N", Token.RESERVED_WORD);
		tokenMap.put("DEBUG-SUB-NUM", Token.RESERVED_WORD);
		tokenMap.put("DEBUGGING", Token.RESERVED_WORD);
		tokenMap.put("DECIMAL-POINT", Token.RESERVED_WORD);
		tokenMap.put("DECLARATIVES", Token.RESERVED_WORD);
		tokenMap.put("DEFAULT", Token.RESERVED_WORD);
		tokenMap.put("DELETE", Token.RESERVED_WORD);
		tokenMap.put("DELIMITED", Token.RESERVED_WORD);
		tokenMap.put("DELIMITER", Token.RESERVED_WORD);
		tokenMap.put("DEPENDENCY", Token.RESERVED_WORD);
		tokenMap.put("DEPENDING", Token.RESERVED_WORD);
		tokenMap.put("DESCENDING", Token.RESERVED_WORD);
		tokenMap.put("DESCRIPTOR", Token.RESERVED_WORD);
		tokenMap.put("DESTINATION", Token.RESERVED_WORD);
		tokenMap.put("DETAIL", Token.RESERVED_WORD);
		tokenMap.put("DICTIONARY", Token.RESERVED_WORD);
		tokenMap.put("DISABLE", Token.RESERVED_WORD);
		tokenMap.put("DISCONNECT", Token.RESERVED_WORD);
		tokenMap.put("DISP", Token.RESERVED_WORD);
		tokenMap.put("DISPLAY", Token.RESERVED_WORD);
		tokenMap.put("DISPLAY-1", Token.RESERVED_WORD);
		tokenMap.put("DISPLAY-6", Token.RESERVED_WORD);
		tokenMap.put("DISPLAY-7", Token.RESERVED_WORD);
		tokenMap.put("DISPLAY-9", Token.RESERVED_WORD);
		tokenMap.put("DIVIDE", Token.RESERVED_WORD);
		tokenMap.put("DIVISION", Token.RESERVED_WORD);
		tokenMap.put("DIVISION.", Token.RESERVED_WORD);
		tokenMap.put("DOES", Token.RESERVED_WORD);
		tokenMap.put("DOWN", Token.RESERVED_WORD);
		tokenMap.put("DUPLICATE", Token.RESERVED_WORD);
		tokenMap.put("DUPLICATES", Token.RESERVED_WORD);
		tokenMap.put("ECHO", Token.RESERVED_WORD);
		tokenMap.put("EDITING", Token.RESERVED_WORD);
		tokenMap.put("EGI", Token.RESERVED_WORD);
		tokenMap.put("EJECT", Token.RESERVED_WORD);
		tokenMap.put("ELSE", Token.RESERVED_WORD);
		tokenMap.put("EMI", Token.RESERVED_WORD);
		tokenMap.put("EMPTY", Token.RESERVED_WORD);
		tokenMap.put("ENABLE", Token.RESERVED_WORD);
		tokenMap.put("END", Token.RESERVED_WORD);
		tokenMap.put("END-ACCEPT", Token.RESERVED_WORD);
		tokenMap.put("END-ADD", Token.RESERVED_WORD);
		tokenMap.put("END-CALL", Token.RESERVED_WORD);
		tokenMap.put("END-COMMIT", Token.RESERVED_WORD);
		tokenMap.put("END-COMPUTE", Token.RESERVED_WORD);
		tokenMap.put("END-CONNECT", Token.RESERVED_WORD);
		tokenMap.put("END-DELETE", Token.RESERVED_WORD);
		tokenMap.put("END-DISCONNECT", Token.RESERVED_WORD);
		tokenMap.put("END-DIVIDE", Token.RESERVED_WORD);
		tokenMap.put("END-ERASE", Token.RESERVED_WORD);
		tokenMap.put("END-EVALUATE", Token.RESERVED_WORD);
		tokenMap.put("END-FETCH", Token.RESERVED_WORD);
		tokenMap.put("END-FIND", Token.RESERVED_WORD);
		tokenMap.put("END-FINISH", Token.RESERVED_WORD);
		tokenMap.put("END-FREE", Token.RESERVED_WORD);
		tokenMap.put("END-GET", Token.RESERVED_WORD);
		tokenMap.put("END-IF", Token.RESERVED_WORD);
		tokenMap.put("END-KEEP", Token.RESERVED_WORD);
		tokenMap.put("END-MODIFY", Token.RESERVED_WORD);
		tokenMap.put("END-MULTIPLY", Token.RESERVED_WORD);
		tokenMap.put("END-OF-PAGE", Token.RESERVED_WORD);
		tokenMap.put("END-PERFORM", Token.RESERVED_WORD);
		tokenMap.put("END-READ", Token.RESERVED_WORD);
		tokenMap.put("END-READY", Token.RESERVED_WORD);
		tokenMap.put("END-RECEIVE", Token.RESERVED_WORD);
		tokenMap.put("END-RECONNECT", Token.RESERVED_WORD);
		tokenMap.put("END-RETURN", Token.RESERVED_WORD);
		tokenMap.put("END-REWRITE", Token.RESERVED_WORD);
		tokenMap.put("END-ROLLBACK", Token.RESERVED_WORD);
		tokenMap.put("END-SEARCH", Token.RESERVED_WORD);
		tokenMap.put("END-START", Token.RESERVED_WORD);
		tokenMap.put("END-STORE", Token.RESERVED_WORD);
		tokenMap.put("END-STRING", Token.RESERVED_WORD);
		tokenMap.put("END-SUBTRACT", Token.RESERVED_WORD);
		tokenMap.put("END-UNSTRING", Token.RESERVED_WORD);
		tokenMap.put("END-WRITE", Token.RESERVED_WORD);
		tokenMap.put("ENDING", Token.RESERVED_WORD);
		tokenMap.put("ENTER", Token.RESERVED_WORD);
		tokenMap.put("ENTRY", Token.RESERVED_WORD);
		tokenMap.put("ENVIRONMENT", Token.RESERVED_WORD);
		tokenMap.put("EOL [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("EOP", Token.RESERVED_WORD);
		tokenMap.put("EOS [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("EQUAL", Token.RESERVED_WORD);
		tokenMap.put("EQUALS", Token.RESERVED_WORD);
		tokenMap.put("ERASE [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("ERROR", Token.RESERVED_WORD);
		tokenMap.put("ESI", Token.RESERVED_WORD);
		tokenMap.put("EVALUATE", Token.RESERVED_WORD);
		tokenMap.put("EVERY", Token.RESERVED_WORD);
		tokenMap.put("EXAMINE", Token.RESERVED_WORD);
		tokenMap.put("EXCEEDS", Token.RESERVED_WORD);
		tokenMap.put("EXCEPTION", Token.RESERVED_WORD);
		tokenMap.put("EXCLUSIVE", Token.RESERVED_WORD);
		tokenMap.put("EXHIBIT", Token.RESERVED_WORD);
		tokenMap.put("EXIT", Token.RESERVED_WORD);
		tokenMap.put("EXIT.", Token.RESERVED_WORD);
		tokenMap.put("EXOR", Token.RESERVED_WORD);
		tokenMap.put("EXTEND", Token.RESERVED_WORD);
		tokenMap.put("EXTERNAL", Token.RESERVED_WORD);
		tokenMap.put("FAILURE", Token.RESERVED_WORD);
		tokenMap.put("FALSE", Token.RESERVED_WORD);
		tokenMap.put("FD", Token.RESERVED_WORD);
		tokenMap.put("FETCH", Token.RESERVED_WORD);
		tokenMap.put("FILE", Token.RESERVED_WORD);
		tokenMap.put("FILE-CONTROL", Token.RESERVED_WORD);
		tokenMap.put("FILLER", Token.RESERVED_WORD);
		tokenMap.put("FINAL", Token.RESERVED_WORD);
		tokenMap.put("FIND", Token.RESERVED_WORD);
		tokenMap.put("FINISH", Token.RESERVED_WORD);
		tokenMap.put("FIRST", Token.RESERVED_WORD);
		tokenMap.put("FLOAT-EXTENDED [200X]", Token.RESERVED_WORD);
		tokenMap.put("FLOAT-LONG [200X]", Token.RESERVED_WORD);
		tokenMap.put("FLOAT-SHORT [200X]", Token.RESERVED_WORD);
		tokenMap.put("FOOTING", Token.RESERVED_WORD);
		tokenMap.put("FOR", Token.RESERVED_WORD);
		tokenMap.put("FOREGROUND-COLOR [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("FREE", Token.RESERVED_WORD);
		tokenMap.put("FROM", Token.RESERVED_WORD);
		tokenMap.put("FULL [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("FUNCTION", Token.RESERVED_WORD);
		tokenMap.put("GENERATE", Token.RESERVED_WORD);
		tokenMap.put("GET", Token.RESERVED_WORD);
		tokenMap.put("GIVING", Token.RESERVED_WORD);
		tokenMap.put("GLOBAL", Token.RESERVED_WORD);
		tokenMap.put("GO", Token.RESERVED_WORD);
		tokenMap.put("GOBACK", Token.RESERVED_WORD);
		tokenMap.put("GOBACK.", Token.RESERVED_WORD);
		tokenMap.put("GREATER", Token.RESERVED_WORD);
		tokenMap.put("GROUP", Token.RESERVED_WORD);
		tokenMap.put("HEADING", Token.RESERVED_WORD);
		tokenMap.put("HIGH-VALUE", Token.RESERVED_WORD);
		tokenMap.put("HIGH-VALUES", Token.RESERVED_WORD);
		tokenMap.put("HIGHLIGHT [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("I-O", Token.RESERVED_WORD);
		tokenMap.put("I-O-CONTROL", Token.RESERVED_WORD);
		tokenMap.put("ID", Token.RESERVED_WORD);
		tokenMap.put("IDENT", Token.RESERVED_WORD);
		tokenMap.put("IDENTIFICATION", Token.RESERVED_WORD);
		tokenMap.put("IF", Token.RESERVED_WORD);
		tokenMap.put("IN", Token.RESERVED_WORD);
		tokenMap.put("INCLUDING", Token.RESERVED_WORD);
		tokenMap.put("INDEX", Token.RESERVED_WORD);
		tokenMap.put("INDEXED", Token.RESERVED_WORD);
		tokenMap.put("INDICATE", Token.RESERVED_WORD);
		tokenMap.put("INITIAL", Token.RESERVED_WORD);
		tokenMap.put("INITIALIZE", Token.RESERVED_WORD);
		tokenMap.put("INITIATE", Token.RESERVED_WORD);
		tokenMap.put("INPUT", Token.RESERVED_WORD);
		tokenMap.put("INPUT-OUTPUT", Token.RESERVED_WORD);
		tokenMap.put("INSPECT", Token.RESERVED_WORD);
		tokenMap.put("INSTALLATION", Token.RESERVED_WORD);
		tokenMap.put("INTO", Token.RESERVED_WORD);
		tokenMap.put("INVALID", Token.RESERVED_WORD);
		tokenMap.put("IS", Token.RESERVED_WORD);
		tokenMap.put("JUST", Token.RESERVED_WORD);
		tokenMap.put("JUSTIFIED", Token.RESERVED_WORD);
		tokenMap.put("KANJI", Token.RESERVED_WORD);
		tokenMap.put("KEEP", Token.RESERVED_WORD);
		tokenMap.put("KEY", Token.RESERVED_WORD);
		tokenMap.put("LABEL", Token.RESERVED_WORD);
		tokenMap.put("LAST", Token.RESERVED_WORD);
		tokenMap.put("LD", Token.RESERVED_WORD);
		tokenMap.put("LEADING", Token.RESERVED_WORD);
		tokenMap.put("LEFT", Token.RESERVED_WORD);
		tokenMap.put("LENGTH", Token.RESERVED_WORD);
		tokenMap.put("LESS", Token.RESERVED_WORD);
		tokenMap.put("LIMIT", Token.RESERVED_WORD);
		tokenMap.put("LIMITS", Token.RESERVED_WORD);
		tokenMap.put("LINAGE", Token.RESERVED_WORD);
		tokenMap.put("LINAGE-COUNTER", Token.RESERVED_WORD);
		tokenMap.put("LINE", Token.RESERVED_WORD);
		tokenMap.put("LINE-COUNTER", Token.RESERVED_WORD);
		tokenMap.put("LINES", Token.RESERVED_WORD);
		tokenMap.put("LINKAGE", Token.RESERVED_WORD);
		tokenMap.put("LOCALLY", Token.RESERVED_WORD);
		tokenMap.put("LOCK", Token.RESERVED_WORD);
		tokenMap.put("LOCK-HOLDING", Token.RESERVED_WORD);
		tokenMap.put("LOW-VALUE", Token.RESERVED_WORD);
		tokenMap.put("LOW-VALUES", Token.RESERVED_WORD);
		tokenMap.put("LOWLIGHT [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("MANUAL", Token.RESERVED_WORD);
		tokenMap.put("MATCH", Token.RESERVED_WORD);
		tokenMap.put("MATCHES", Token.RESERVED_WORD);
		tokenMap.put("MEMBER", Token.RESERVED_WORD);
		tokenMap.put("MEMBERSHIP", Token.RESERVED_WORD);
		tokenMap.put("MEMORY", Token.RESERVED_WORD);
		tokenMap.put("MERGE", Token.RESERVED_WORD);
		tokenMap.put("MESSAGE", Token.RESERVED_WORD);
		tokenMap.put("MODE", Token.RESERVED_WORD);
		tokenMap.put("MODIFY", Token.RESERVED_WORD);
		tokenMap.put("MODULES", Token.RESERVED_WORD);
		tokenMap.put("MOVE", Token.RESERVED_WORD);
		tokenMap.put("MULTIPLE", Token.RESERVED_WORD);
		tokenMap.put("MULTIPLY", Token.RESERVED_WORD);
		tokenMap.put("NAMED", Token.RESERVED_WORD);
		tokenMap.put("NATIVE", Token.RESERVED_WORD);
		tokenMap.put("NEGATIVE", Token.RESERVED_WORD);
		tokenMap.put("NEXT", Token.RESERVED_WORD);
		tokenMap.put("NO", Token.RESERVED_WORD);
		tokenMap.put("NON-NULL", Token.RESERVED_WORD);
		tokenMap.put("NOT", Token.RESERVED_WORD);
		tokenMap.put("NOTE", Token.RESERVED_WORD);
		tokenMap.put("NULL", Token.RESERVED_WORD);
		tokenMap.put("NUMBER", Token.RESERVED_WORD);
		tokenMap.put("NUMERIC", Token.RESERVED_WORD);
		tokenMap.put("NUMERIC-EDITED", Token.RESERVED_WORD);
		tokenMap.put("OBJECT-COMPUTER", Token.RESERVED_WORD);
		tokenMap.put("OBJECT-COMPUTER.", Token.RESERVED_WORD);
		tokenMap.put("OCCURS", Token.RESERVED_WORD);
		tokenMap.put("OF", Token.RESERVED_WORD);
		tokenMap.put("OFF", Token.RESERVED_WORD);
		tokenMap.put("OFFSET", Token.RESERVED_WORD);
		tokenMap.put("OMITTED", Token.RESERVED_WORD);
		tokenMap.put("ON", Token.RESERVED_WORD);
		tokenMap.put("ONLY", Token.RESERVED_WORD);
		tokenMap.put("OPEN", Token.RESERVED_WORD);
		tokenMap.put("OPTIONAL", Token.RESERVED_WORD);
		tokenMap.put("OPTIONS [200X]", Token.RESERVED_WORD);
		tokenMap.put("OR", Token.RESERVED_WORD);
		tokenMap.put("ORDER", Token.RESERVED_WORD);
		tokenMap.put("OTHERWISE", Token.RESERVED_WORD);
		tokenMap.put("PACKED-DECIMAL", Token.RESERVED_WORD);
		tokenMap.put("PADDING", Token.RESERVED_WORD);
		tokenMap.put("PAGE", Token.RESERVED_WORD);
		tokenMap.put("PAGE-COUNTER", Token.RESERVED_WORD);
		tokenMap.put("PASSWORD", Token.RESERVED_WORD);
		tokenMap.put("PERFORM", Token.RESERVED_WORD);
		tokenMap.put("PF", Token.RESERVED_WORD);
		tokenMap.put("PH", Token.RESERVED_WORD);
		tokenMap.put("PIC", Token.RESERVED_WORD);
		tokenMap.put("PICTURE", Token.RESERVED_WORD);
		tokenMap.put("PLUS", Token.RESERVED_WORD);
		tokenMap.put("POINTER", Token.RESERVED_WORD);
		tokenMap.put("POSITION", Token.RESERVED_WORD);
		tokenMap.put("POSITIONING", Token.RESERVED_WORD);
		tokenMap.put("POSITIVE", Token.RESERVED_WORD);
		tokenMap.put("PREVIOUS", Token.RESERVED_WORD);
		tokenMap.put("PRINTING", Token.RESERVED_WORD);
		tokenMap.put("PRIOR", Token.RESERVED_WORD);
		tokenMap.put("PROCEDURE", Token.RESERVED_WORD);
		tokenMap.put("PROCEDURES", Token.RESERVED_WORD);
		tokenMap.put("PROCEED", Token.RESERVED_WORD);
		tokenMap.put("PROGRAM", Token.RESERVED_WORD);
		tokenMap.put("PROGRAM-ID", Token.RESERVED_WORD);
		tokenMap.put("PROGRAM-ID.", Token.RESERVED_WORD);
		tokenMap.put("PROTECTED", Token.RESERVED_WORD);
		tokenMap.put("PURGE", Token.RESERVED_WORD);
		tokenMap.put("QUEUE", Token.RESERVED_WORD);
		tokenMap.put("QUOTE", Token.RESERVED_WORD);
		tokenMap.put("QUOTES", Token.RESERVED_WORD);
		tokenMap.put("RANDOM", Token.RESERVED_WORD);
		tokenMap.put("RD", Token.RESERVED_WORD);
		tokenMap.put("READ", Token.RESERVED_WORD);
		tokenMap.put("READERS", Token.RESERVED_WORD);
		tokenMap.put("READY", Token.RESERVED_WORD);
		tokenMap.put("REALM", Token.RESERVED_WORD);
		tokenMap.put("REALMS", Token.RESERVED_WORD);
		tokenMap.put("RECEIVE", Token.RESERVED_WORD);
		tokenMap.put("RECONNECT", Token.RESERVED_WORD);
		tokenMap.put("RECORD", Token.RESERVED_WORD);
		tokenMap.put("RECORD-NAME", Token.RESERVED_WORD);
		tokenMap.put("RECORD-OVERFLOW", Token.RESERVED_WORD);
		tokenMap.put("RECORDING", Token.RESERVED_WORD);
		tokenMap.put("RECORDS", Token.RESERVED_WORD);
		tokenMap.put("REDEFINES", Token.RESERVED_WORD);
		tokenMap.put("REEL", Token.RESERVED_WORD);
		tokenMap.put("REFERENCE", Token.RESERVED_WORD);
		tokenMap.put("REFERENCE-MODIFIER", Token.RESERVED_WORD);
		tokenMap.put("REFERENCES", Token.RESERVED_WORD);
		tokenMap.put("REGARDLESS", Token.RESERVED_WORD);
		tokenMap.put("RELATIVE", Token.RESERVED_WORD);
		tokenMap.put("RELEASE", Token.RESERVED_WORD);
		tokenMap.put("RELOAD", Token.RESERVED_WORD);
		tokenMap.put("REMAINDER", Token.RESERVED_WORD);
		tokenMap.put("REMARKS", Token.RESERVED_WORD);
		tokenMap.put("REMOVAL", Token.RESERVED_WORD);
		tokenMap.put("RENAMES", Token.RESERVED_WORD);
		tokenMap.put("REORG-CRITERIA", Token.RESERVED_WORD);
		tokenMap.put("REPLACE", Token.RESERVED_WORD);
		tokenMap.put("REPLACING", Token.RESERVED_WORD);
		tokenMap.put("REPORT", Token.RESERVED_WORD);
		tokenMap.put("REPORTING", Token.RESERVED_WORD);
		tokenMap.put("REPORTS", Token.RESERVED_WORD);
		tokenMap.put("REQUIRED [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("RERUN", Token.RESERVED_WORD);
		tokenMap.put("RESERVE", Token.RESERVED_WORD);
		tokenMap.put("RESET", Token.RESERVED_WORD);
		tokenMap.put("RETAINING", Token.RESERVED_WORD);
		tokenMap.put("RETRIEVAL", Token.RESERVED_WORD);
		tokenMap.put("RETURN", Token.RESERVED_WORD);
		tokenMap.put("RETURN-CODE [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("RETURNING", Token.RESERVED_WORD);
		tokenMap.put("REVERSE-VIDEO [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("REVERSED", Token.RESERVED_WORD);
		tokenMap.put("REWIND", Token.RESERVED_WORD);
		tokenMap.put("REWRITE", Token.RESERVED_WORD);
		tokenMap.put("RF", Token.RESERVED_WORD);
		tokenMap.put("RH", Token.RESERVED_WORD);
		tokenMap.put("RIGHT", Token.RESERVED_WORD);
		tokenMap.put("RMS-CURRENT-FILENAME", Token.RESERVED_WORD);
		tokenMap.put("RMS-CURRENT-STS", Token.RESERVED_WORD);
		tokenMap.put("RMS-CURRENT-STV", Token.RESERVED_WORD);
		tokenMap.put("RMS-FILENAME", Token.RESERVED_WORD);
		tokenMap.put("RMS-STS", Token.RESERVED_WORD);
		tokenMap.put("RMS-STV", Token.RESERVED_WORD);
		tokenMap.put("ROLLBACK", Token.RESERVED_WORD);
		tokenMap.put("ROUNDED", Token.RESERVED_WORD);
		tokenMap.put("RUN", Token.RESERVED_WORD);
		tokenMap.put("RUN.", Token.RESERVED_WORD);
		tokenMap.put("SAME", Token.RESERVED_WORD);
		tokenMap.put("SCREEN [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("SD", Token.RESERVED_WORD);
		tokenMap.put("SEARCH", Token.RESERVED_WORD);
		tokenMap.put("SECTION", Token.RESERVED_WORD);
		tokenMap.put("SECTION.", Token.RESERVED_WORD);
		tokenMap.put("SECURE [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("SECURITY", Token.RESERVED_WORD);
		tokenMap.put("SEGMENT", Token.RESERVED_WORD);
		tokenMap.put("SEGMENT-LIMIT", Token.RESERVED_WORD);
		tokenMap.put("SELECT", Token.RESERVED_WORD);
		tokenMap.put("SEND", Token.RESERVED_WORD);
		tokenMap.put("SENTENCE", Token.RESERVED_WORD);
		tokenMap.put("SEPARATE", Token.RESERVED_WORD);
		tokenMap.put("SEQUENCE", Token.RESERVED_WORD);
		tokenMap.put("SEQUENCE-NUMBER", Token.RESERVED_WORD);
		tokenMap.put("SEQUENTIAL", Token.RESERVED_WORD);
		tokenMap.put("SERVICE", Token.RESERVED_WORD);
		tokenMap.put("SET", Token.RESERVED_WORD);
		tokenMap.put("SETS", Token.RESERVED_WORD);
		tokenMap.put("SIGN", Token.RESERVED_WORD);
		tokenMap.put("SIGNED [200X]", Token.RESERVED_WORD);
		tokenMap.put("SIZE", Token.RESERVED_WORD);
		tokenMap.put("SKIP1", Token.RESERVED_WORD);
		tokenMap.put("SKIP2", Token.RESERVED_WORD);
		tokenMap.put("SKIP3", Token.RESERVED_WORD);
		tokenMap.put("SORT", Token.RESERVED_WORD);
		tokenMap.put("SORT-MERGE", Token.RESERVED_WORD);
		tokenMap.put("SOURCE", Token.RESERVED_WORD);
		tokenMap.put("SOURCE-COMPUTER", Token.RESERVED_WORD);
		tokenMap.put("SOURCE-COMPUTER.", Token.RESERVED_WORD);
		tokenMap.put("SPACE", Token.RESERVED_WORD);
		tokenMap.put("SPACES", Token.RESERVED_WORD);
		tokenMap.put("SPECIAL-NAMES", Token.RESERVED_WORD);
		tokenMap.put("STANDARD", Token.RESERVED_WORD);
		tokenMap.put("STANDARD-1", Token.RESERVED_WORD);
		tokenMap.put("STANDARD-2", Token.RESERVED_WORD);
		tokenMap.put("START", Token.RESERVED_WORD);
		tokenMap.put("STATUS", Token.RESERVED_WORD);
		tokenMap.put("STOP", Token.RESERVED_WORD);
		tokenMap.put("STORE", Token.RESERVED_WORD);
		tokenMap.put("STREAM", Token.RESERVED_WORD);
		tokenMap.put("STRING", Token.RESERVED_WORD);
		tokenMap.put("SUB-QUEUE-1", Token.RESERVED_WORD);
		tokenMap.put("SUB-QUEUE-2", Token.RESERVED_WORD);
		tokenMap.put("SUB-QUEUE-3", Token.RESERVED_WORD);
		tokenMap.put("SUB-SCHEMA", Token.RESERVED_WORD);
		tokenMap.put("SUBTRACT", Token.RESERVED_WORD);
		tokenMap.put("SUCCESS", Token.RESERVED_WORD);
		tokenMap.put("SUM", Token.RESERVED_WORD);
		tokenMap.put("SUPPRESS", Token.RESERVED_WORD);
		tokenMap.put("SYMBOLIC", Token.RESERVED_WORD);
		tokenMap.put("SYNC", Token.RESERVED_WORD);
		tokenMap.put("SYNCHRONIZED", Token.RESERVED_WORD);
		tokenMap.put("TABLE", Token.RESERVED_WORD);
		tokenMap.put("TALLYING", Token.RESERVED_WORD);
		tokenMap.put("TAPE", Token.RESERVED_WORD);
		tokenMap.put("TENANT", Token.RESERVED_WORD);
		tokenMap.put("TERMINAL", Token.RESERVED_WORD);
		tokenMap.put("TERMINATE", Token.RESERVED_WORD);
		tokenMap.put("TEST", Token.RESERVED_WORD);
		tokenMap.put("TEXT", Token.RESERVED_WORD);
		tokenMap.put("THAN", Token.RESERVED_WORD);
		tokenMap.put("THEN", Token.RESERVED_WORD);
		tokenMap.put("THROUGH", Token.RESERVED_WORD);
		tokenMap.put("THRU", Token.RESERVED_WORD);
		tokenMap.put("TIME", Token.RESERVED_WORD);
		tokenMap.put("TIMES", Token.RESERVED_WORD);
		tokenMap.put("TIMES.", Token.RESERVED_WORD);
		tokenMap.put("TO", Token.RESERVED_WORD);
		tokenMap.put("TOP", Token.RESERVED_WORD);
		tokenMap.put("TRACE", Token.RESERVED_WORD);
		tokenMap.put("TRAILING", Token.RESERVED_WORD);
		tokenMap.put("TRANSFORM", Token.RESERVED_WORD);
		tokenMap.put("TRUE", Token.RESERVED_WORD);
		tokenMap.put("TYPE", Token.RESERVED_WORD);
		tokenMap.put("UNDERLINE [XOPEN]", Token.RESERVED_WORD);
		tokenMap.put("UNDERLINED", Token.RESERVED_WORD);
		tokenMap.put("UNEQUAL", Token.RESERVED_WORD);
		tokenMap.put("UNIT", Token.RESERVED_WORD);
		tokenMap.put("UNLOCK", Token.RESERVED_WORD);
		tokenMap.put("UNSIGNED [200X]", Token.RESERVED_WORD);
		tokenMap.put("UNSTRING", Token.RESERVED_WORD);
		tokenMap.put("UNTIL", Token.RESERVED_WORD);
		tokenMap.put("UP", Token.RESERVED_WORD);
		tokenMap.put("UPDATE", Token.RESERVED_WORD);
		tokenMap.put("UPDATERS", Token.RESERVED_WORD);
		tokenMap.put("UPON", Token.RESERVED_WORD);
		tokenMap.put("USAGE", Token.RESERVED_WORD);
		tokenMap.put("USAGE-MODE", Token.RESERVED_WORD);
		tokenMap.put("USE", Token.RESERVED_WORD);
		tokenMap.put("USING", Token.RESERVED_WORD);
		tokenMap.put("VALUE", Token.RESERVED_WORD);
		tokenMap.put("VALUES", Token.RESERVED_WORD);
		tokenMap.put("VARYING", Token.RESERVED_WORD);
		tokenMap.put("VFU-CHANNEL", Token.RESERVED_WORD);
		tokenMap.put("WAIT", Token.RESERVED_WORD);
		tokenMap.put("WHEN", Token.RESERVED_WORD);
		tokenMap.put("WHERE", Token.RESERVED_WORD);
		tokenMap.put("WITH", Token.RESERVED_WORD);
		tokenMap.put("WITHIN", Token.RESERVED_WORD);
		tokenMap.put("WORDS", Token.RESERVED_WORD);
		tokenMap.put("WORKING-STORAGE", Token.RESERVED_WORD);
		tokenMap.put("WRITE", Token.RESERVED_WORD);
		tokenMap.put("WRITERS", Token.RESERVED_WORD);
		tokenMap.put("ZERO", Token.RESERVED_WORD);
		tokenMap.put("ZEROES", Token.RESERVED_WORD);
		tokenMap.put("ZEROS", Token.RESERVED_WORD);
		tokenMap.put("ZEROS.", Token.RESERVED_WORD);

		tokenMap.put("accept", Token.RESERVED_WORD);
		tokenMap.put("access", Token.RESERVED_WORD);
		tokenMap.put("add", Token.RESERVED_WORD);
		tokenMap.put("address", Token.RESERVED_WORD);
		tokenMap.put("advancing", Token.RESERVED_WORD);
		tokenMap.put("after", Token.RESERVED_WORD);
		tokenMap.put("all", Token.RESERVED_WORD);
		tokenMap.put("allowing", Token.RESERVED_WORD);
		tokenMap.put("alphabet", Token.RESERVED_WORD);
		tokenMap.put("alphabetic", Token.RESERVED_WORD);
		tokenMap.put("alphabetic--lower", Token.RESERVED_WORD);
		tokenMap.put("alphabetic--upper", Token.RESERVED_WORD);
		tokenMap.put("alphanumeric", Token.RESERVED_WORD);
		tokenMap.put("alphanumeric--edited", Token.RESERVED_WORD);
		tokenMap.put("also", Token.RESERVED_WORD);
		tokenMap.put("alter", Token.RESERVED_WORD);
		tokenMap.put("alternate", Token.RESERVED_WORD);
		tokenMap.put("and", Token.RESERVED_WORD);
		tokenMap.put("any", Token.RESERVED_WORD);
		tokenMap.put("apply", Token.RESERVED_WORD);
		tokenMap.put("are", Token.RESERVED_WORD);
		tokenMap.put("area", Token.RESERVED_WORD);
		tokenMap.put("areas", Token.RESERVED_WORD);
		tokenMap.put("ascending", Token.RESERVED_WORD);
		tokenMap.put("assign", Token.RESERVED_WORD);
		tokenMap.put("at", Token.RESERVED_WORD);
		tokenMap.put("author", Token.RESERVED_WORD);
		tokenMap.put("author.", Token.RESERVED_WORD);
		tokenMap.put("auto [xopen]", Token.RESERVED_WORD);
		tokenMap.put("automatic", Token.RESERVED_WORD);
		tokenMap.put("autoterminate", Token.RESERVED_WORD);
		tokenMap.put("background-color [xopen]", Token.RESERVED_WORD);
		tokenMap.put("batch", Token.RESERVED_WORD);
		tokenMap.put("before", Token.RESERVED_WORD);
		tokenMap.put("beginning", Token.RESERVED_WORD);
		tokenMap.put("bell [xopen]", Token.RESERVED_WORD);
		tokenMap.put("binary", Token.RESERVED_WORD);
		tokenMap.put("binary-char [200x]", Token.RESERVED_WORD);
		tokenMap.put("binary-double [200x]", Token.RESERVED_WORD);
		tokenMap.put("binary-long [200x]", Token.RESERVED_WORD);
		tokenMap.put("binary-short [200x]", Token.RESERVED_WORD);
		tokenMap.put("bit", Token.RESERVED_WORD);
		tokenMap.put("bits", Token.RESERVED_WORD);
		tokenMap.put("blank", Token.RESERVED_WORD);
		tokenMap.put("blink [xopen]", Token.RESERVED_WORD);
		tokenMap.put("blinking", Token.RESERVED_WORD);
		tokenMap.put("block", Token.RESERVED_WORD);
		tokenMap.put("bold", Token.RESERVED_WORD);
		tokenMap.put("boolean", Token.RESERVED_WORD);
		tokenMap.put("bottom", Token.RESERVED_WORD);
		tokenMap.put("by", Token.RESERVED_WORD);
		tokenMap.put("call", Token.RESERVED_WORD);
		tokenMap.put("cancel", Token.RESERVED_WORD);
		tokenMap.put("cd", Token.RESERVED_WORD);
		tokenMap.put("cf", Token.RESERVED_WORD);
		tokenMap.put("ch", Token.RESERVED_WORD);
		tokenMap.put("changed", Token.RESERVED_WORD);
		tokenMap.put("character", Token.RESERVED_WORD);
		tokenMap.put("characters", Token.RESERVED_WORD);
		tokenMap.put("class", Token.RESERVED_WORD);
		tokenMap.put("clock-units", Token.RESERVED_WORD);
		tokenMap.put("close", Token.RESERVED_WORD);
		tokenMap.put("cobol", Token.RESERVED_WORD);
		tokenMap.put("code", Token.RESERVED_WORD);
		tokenMap.put("code-set", Token.RESERVED_WORD);
		tokenMap.put("col [200x]", Token.RESERVED_WORD);
		tokenMap.put("collating", Token.RESERVED_WORD);
		tokenMap.put("column", Token.RESERVED_WORD);
		tokenMap.put("comma", Token.RESERVED_WORD);
		tokenMap.put("commit", Token.RESERVED_WORD);
		tokenMap.put("common", Token.RESERVED_WORD);
		tokenMap.put("communication", Token.RESERVED_WORD);
		tokenMap.put("comp", Token.RESERVED_WORD);
		tokenMap.put("comp-1", Token.RESERVED_WORD);
		tokenMap.put("comp-2", Token.RESERVED_WORD);
		tokenMap.put("comp-3", Token.RESERVED_WORD);
		tokenMap.put("comp-4", Token.RESERVED_WORD);
		tokenMap.put("comp-5", Token.RESERVED_WORD);
		tokenMap.put("comp-6", Token.RESERVED_WORD);
		tokenMap.put("comp-x", Token.RESERVED_WORD);
		tokenMap.put("computational", Token.RESERVED_WORD);
		tokenMap.put("computational-1", Token.RESERVED_WORD);
		tokenMap.put("computational-2", Token.RESERVED_WORD);
		tokenMap.put("computational-3", Token.RESERVED_WORD);
		tokenMap.put("computational-4", Token.RESERVED_WORD);
		tokenMap.put("computational-5", Token.RESERVED_WORD);
		tokenMap.put("computational-6", Token.RESERVED_WORD);
		tokenMap.put("computational-x", Token.RESERVED_WORD);
		tokenMap.put("compute", Token.RESERVED_WORD);
		tokenMap.put("concurrent", Token.RESERVED_WORD);
		tokenMap.put("configuration", Token.RESERVED_WORD);
		tokenMap.put("configuration section.", Token.RESERVED_WORD);
		tokenMap.put("connect", Token.RESERVED_WORD);
		tokenMap.put("contain", Token.RESERVED_WORD);
		tokenMap.put("contains", Token.RESERVED_WORD);
		tokenMap.put("content", Token.RESERVED_WORD);
		tokenMap.put("continue", Token.RESERVED_WORD);
		tokenMap.put("control", Token.RESERVED_WORD);
		tokenMap.put("controls", Token.RESERVED_WORD);
		tokenMap.put("conversion", Token.RESERVED_WORD);
		tokenMap.put("converting", Token.RESERVED_WORD);
		tokenMap.put("copy", Token.RESERVED_WORD);
		tokenMap.put("core-index", Token.RESERVED_WORD);
		tokenMap.put("corr", Token.RESERVED_WORD);
		tokenMap.put("corresponding", Token.RESERVED_WORD);
		tokenMap.put("count", Token.RESERVED_WORD);
		tokenMap.put("crt", Token.RESERVED_WORD);
		tokenMap.put("currency", Token.RESERVED_WORD);
		tokenMap.put("current", Token.RESERVED_WORD);
		tokenMap.put("cursor", Token.RESERVED_WORD);
		tokenMap.put("data", Token.RESERVED_WORD);
		tokenMap.put("data division", Token.RESERVED_WORD);
		tokenMap.put("data division.", Token.RESERVED_WORD);
		tokenMap.put("date", Token.RESERVED_WORD);
		tokenMap.put("date-compiled", Token.RESERVED_WORD);
		tokenMap.put("date-written", Token.RESERVED_WORD);
		tokenMap.put("date-written.", Token.RESERVED_WORD);
		tokenMap.put("day", Token.RESERVED_WORD);
		tokenMap.put("day-of-week", Token.RESERVED_WORD);
		tokenMap.put("db", Token.RESERVED_WORD);
		tokenMap.put("db-access-control-key", Token.RESERVED_WORD);
		tokenMap.put("db-condition", Token.RESERVED_WORD);
		tokenMap.put("db-current-record-id", Token.RESERVED_WORD);
		tokenMap.put("db-current-record-name", Token.RESERVED_WORD);
		tokenMap.put("db-exception", Token.RESERVED_WORD);
		tokenMap.put("db-key", Token.RESERVED_WORD);
		tokenMap.put("db-record-name", Token.RESERVED_WORD);
		tokenMap.put("db-set-name", Token.RESERVED_WORD);
		tokenMap.put("db-status", Token.RESERVED_WORD);
		tokenMap.put("db-uwa", Token.RESERVED_WORD);
		tokenMap.put("dbcs", Token.RESERVED_WORD);
		tokenMap.put("dbkey", Token.RESERVED_WORD);
		tokenMap.put("de", Token.RESERVED_WORD);
		tokenMap.put("debug-contents", Token.RESERVED_WORD);
		tokenMap.put("debug-item", Token.RESERVED_WORD);
		tokenMap.put("debug-length", Token.RESERVED_WORD);
		tokenMap.put("debug-line", Token.RESERVED_WORD);
		tokenMap.put("debug-name", Token.RESERVED_WORD);
		tokenMap.put("debug-numeric-contents", Token.RESERVED_WORD);
		tokenMap.put("debug-size", Token.RESERVED_WORD);
		tokenMap.put("debug-start", Token.RESERVED_WORD);
		tokenMap.put("debug-sub", Token.RESERVED_WORD);
		tokenMap.put("debug-sub-1", Token.RESERVED_WORD);
		tokenMap.put("debug-sub-2", Token.RESERVED_WORD);
		tokenMap.put("debug-sub-3", Token.RESERVED_WORD);
		tokenMap.put("debug-sub-item", Token.RESERVED_WORD);
		tokenMap.put("debug-sub-n", Token.RESERVED_WORD);
		tokenMap.put("debug-sub-num", Token.RESERVED_WORD);
		tokenMap.put("debugging", Token.RESERVED_WORD);
		tokenMap.put("decimal-point", Token.RESERVED_WORD);
		tokenMap.put("declaratives", Token.RESERVED_WORD);
		tokenMap.put("default", Token.RESERVED_WORD);
		tokenMap.put("delete", Token.RESERVED_WORD);
		tokenMap.put("delimited", Token.RESERVED_WORD);
		tokenMap.put("delimiter", Token.RESERVED_WORD);
		tokenMap.put("dependency", Token.RESERVED_WORD);
		tokenMap.put("depending", Token.RESERVED_WORD);
		tokenMap.put("descending", Token.RESERVED_WORD);
		tokenMap.put("descriptor", Token.RESERVED_WORD);
		tokenMap.put("destination", Token.RESERVED_WORD);
		tokenMap.put("detail", Token.RESERVED_WORD);
		tokenMap.put("dictionary", Token.RESERVED_WORD);
		tokenMap.put("disable", Token.RESERVED_WORD);
		tokenMap.put("disconnect", Token.RESERVED_WORD);
		tokenMap.put("disp", Token.RESERVED_WORD);
		tokenMap.put("display", Token.RESERVED_WORD);
		tokenMap.put("display-1", Token.RESERVED_WORD);
		tokenMap.put("display-6", Token.RESERVED_WORD);
		tokenMap.put("display-7", Token.RESERVED_WORD);
		tokenMap.put("display-9", Token.RESERVED_WORD);
		tokenMap.put("divide", Token.RESERVED_WORD);
		tokenMap.put("division", Token.RESERVED_WORD);
		tokenMap.put("division.", Token.RESERVED_WORD);
		tokenMap.put("does", Token.RESERVED_WORD);
		tokenMap.put("down", Token.RESERVED_WORD);
		tokenMap.put("duplicate", Token.RESERVED_WORD);
		tokenMap.put("duplicates", Token.RESERVED_WORD);
		tokenMap.put("echo", Token.RESERVED_WORD);
		tokenMap.put("editing", Token.RESERVED_WORD);
		tokenMap.put("egi", Token.RESERVED_WORD);
		tokenMap.put("eject", Token.RESERVED_WORD);
		tokenMap.put("else", Token.RESERVED_WORD);
		tokenMap.put("emi", Token.RESERVED_WORD);
		tokenMap.put("empty", Token.RESERVED_WORD);
		tokenMap.put("enable", Token.RESERVED_WORD);
		tokenMap.put("end", Token.RESERVED_WORD);
		tokenMap.put("end-accept", Token.RESERVED_WORD);
		tokenMap.put("end-add", Token.RESERVED_WORD);
		tokenMap.put("end-call", Token.RESERVED_WORD);
		tokenMap.put("end-commit", Token.RESERVED_WORD);
		tokenMap.put("end-compute", Token.RESERVED_WORD);
		tokenMap.put("end-connect", Token.RESERVED_WORD);
		tokenMap.put("end-delete", Token.RESERVED_WORD);
		tokenMap.put("end-disconnect", Token.RESERVED_WORD);
		tokenMap.put("end-divide", Token.RESERVED_WORD);
		tokenMap.put("end-erase", Token.RESERVED_WORD);
		tokenMap.put("end-evaluate", Token.RESERVED_WORD);
		tokenMap.put("end-fetch", Token.RESERVED_WORD);
		tokenMap.put("end-find", Token.RESERVED_WORD);
		tokenMap.put("end-finish", Token.RESERVED_WORD);
		tokenMap.put("end-free", Token.RESERVED_WORD);
		tokenMap.put("end-get", Token.RESERVED_WORD);
		tokenMap.put("end-if", Token.RESERVED_WORD);
		tokenMap.put("end-keep", Token.RESERVED_WORD);
		tokenMap.put("end-modify", Token.RESERVED_WORD);
		tokenMap.put("end-multiply", Token.RESERVED_WORD);
		tokenMap.put("end-of-page", Token.RESERVED_WORD);
		tokenMap.put("end-perform", Token.RESERVED_WORD);
		tokenMap.put("end-read", Token.RESERVED_WORD);
		tokenMap.put("end-ready", Token.RESERVED_WORD);
		tokenMap.put("end-receive", Token.RESERVED_WORD);
		tokenMap.put("end-reconnect", Token.RESERVED_WORD);
		tokenMap.put("end-return", Token.RESERVED_WORD);
		tokenMap.put("end-rewrite", Token.RESERVED_WORD);
		tokenMap.put("end-rollback", Token.RESERVED_WORD);
		tokenMap.put("end-search", Token.RESERVED_WORD);
		tokenMap.put("end-start", Token.RESERVED_WORD);
		tokenMap.put("end-store", Token.RESERVED_WORD);
		tokenMap.put("end-string", Token.RESERVED_WORD);
		tokenMap.put("end-subtract", Token.RESERVED_WORD);
		tokenMap.put("end-unstring", Token.RESERVED_WORD);
		tokenMap.put("end-write", Token.RESERVED_WORD);
		tokenMap.put("ending", Token.RESERVED_WORD);
		tokenMap.put("enter", Token.RESERVED_WORD);
		tokenMap.put("entry", Token.RESERVED_WORD);
		tokenMap.put("environment", Token.RESERVED_WORD);
		tokenMap.put("eol [xopen]", Token.RESERVED_WORD);
		tokenMap.put("eop", Token.RESERVED_WORD);
		tokenMap.put("eos [xopen]", Token.RESERVED_WORD);
		tokenMap.put("equal", Token.RESERVED_WORD);
		tokenMap.put("equals", Token.RESERVED_WORD);
		tokenMap.put("erase [xopen]", Token.RESERVED_WORD);
		tokenMap.put("error", Token.RESERVED_WORD);
		tokenMap.put("esi", Token.RESERVED_WORD);
		tokenMap.put("evaluate", Token.RESERVED_WORD);
		tokenMap.put("every", Token.RESERVED_WORD);
		tokenMap.put("examine", Token.RESERVED_WORD);
		tokenMap.put("exceeds", Token.RESERVED_WORD);
		tokenMap.put("exception", Token.RESERVED_WORD);
		tokenMap.put("exclusive", Token.RESERVED_WORD);
		tokenMap.put("exhibit", Token.RESERVED_WORD);
		tokenMap.put("exit", Token.RESERVED_WORD);
		tokenMap.put("exit.", Token.RESERVED_WORD);
		tokenMap.put("exor", Token.RESERVED_WORD);
		tokenMap.put("extend", Token.RESERVED_WORD);
		tokenMap.put("external", Token.RESERVED_WORD);
		tokenMap.put("failure", Token.RESERVED_WORD);
		tokenMap.put("false", Token.RESERVED_WORD);
		tokenMap.put("fd", Token.RESERVED_WORD);
		tokenMap.put("fetch", Token.RESERVED_WORD);
		tokenMap.put("file", Token.RESERVED_WORD);
		tokenMap.put("file-control", Token.RESERVED_WORD);
		tokenMap.put("filler", Token.RESERVED_WORD);
		tokenMap.put("final", Token.RESERVED_WORD);
		tokenMap.put("find", Token.RESERVED_WORD);
		tokenMap.put("finish", Token.RESERVED_WORD);
		tokenMap.put("first", Token.RESERVED_WORD);
		tokenMap.put("float-extended [200x]", Token.RESERVED_WORD);
		tokenMap.put("float-long [200x]", Token.RESERVED_WORD);
		tokenMap.put("float-short [200x]", Token.RESERVED_WORD);
		tokenMap.put("footing", Token.RESERVED_WORD);
		tokenMap.put("for", Token.RESERVED_WORD);
		tokenMap.put("foreground-color [xopen]", Token.RESERVED_WORD);
		tokenMap.put("free", Token.RESERVED_WORD);
		tokenMap.put("from", Token.RESERVED_WORD);
		tokenMap.put("full [xopen]", Token.RESERVED_WORD);
		tokenMap.put("function", Token.RESERVED_WORD);
		tokenMap.put("generate", Token.RESERVED_WORD);
		tokenMap.put("get", Token.RESERVED_WORD);
		tokenMap.put("giving", Token.RESERVED_WORD);
		tokenMap.put("global", Token.RESERVED_WORD);
		tokenMap.put("go", Token.RESERVED_WORD);
		tokenMap.put("goback", Token.RESERVED_WORD);
		tokenMap.put("goback.", Token.RESERVED_WORD);
		tokenMap.put("greater", Token.RESERVED_WORD);
		tokenMap.put("group", Token.RESERVED_WORD);
		tokenMap.put("heading", Token.RESERVED_WORD);
		tokenMap.put("high-value", Token.RESERVED_WORD);
		tokenMap.put("high-values", Token.RESERVED_WORD);
		tokenMap.put("highlight [xopen]", Token.RESERVED_WORD);
		tokenMap.put("i-o", Token.RESERVED_WORD);
		tokenMap.put("i-o-control", Token.RESERVED_WORD);
		tokenMap.put("id", Token.RESERVED_WORD);
		tokenMap.put("ident", Token.RESERVED_WORD);
		tokenMap.put("identification", Token.RESERVED_WORD);
		tokenMap.put("if", Token.RESERVED_WORD);
		tokenMap.put("in", Token.RESERVED_WORD);
		tokenMap.put("including", Token.RESERVED_WORD);
		tokenMap.put("index", Token.RESERVED_WORD);
		tokenMap.put("indexed", Token.RESERVED_WORD);
		tokenMap.put("indicate", Token.RESERVED_WORD);
		tokenMap.put("initial", Token.RESERVED_WORD);
		tokenMap.put("initialize", Token.RESERVED_WORD);
		tokenMap.put("initiate", Token.RESERVED_WORD);
		tokenMap.put("input", Token.RESERVED_WORD);
		tokenMap.put("input-output", Token.RESERVED_WORD);
		tokenMap.put("inspect", Token.RESERVED_WORD);
		tokenMap.put("installation", Token.RESERVED_WORD);
		tokenMap.put("into", Token.RESERVED_WORD);
		tokenMap.put("invalid", Token.RESERVED_WORD);
		tokenMap.put("is", Token.RESERVED_WORD);
		tokenMap.put("just", Token.RESERVED_WORD);
		tokenMap.put("justified", Token.RESERVED_WORD);
		tokenMap.put("kanji", Token.RESERVED_WORD);
		tokenMap.put("keep", Token.RESERVED_WORD);
		tokenMap.put("key", Token.RESERVED_WORD);
		tokenMap.put("label", Token.RESERVED_WORD);
		tokenMap.put("last", Token.RESERVED_WORD);
		tokenMap.put("ld", Token.RESERVED_WORD);
		tokenMap.put("leading", Token.RESERVED_WORD);
		tokenMap.put("left", Token.RESERVED_WORD);
		tokenMap.put("length", Token.RESERVED_WORD);
		tokenMap.put("less", Token.RESERVED_WORD);
		tokenMap.put("limit", Token.RESERVED_WORD);
		tokenMap.put("limits", Token.RESERVED_WORD);
		tokenMap.put("linage", Token.RESERVED_WORD);
		tokenMap.put("linage-counter", Token.RESERVED_WORD);
		tokenMap.put("line", Token.RESERVED_WORD);
		tokenMap.put("line-counter", Token.RESERVED_WORD);
		tokenMap.put("lines", Token.RESERVED_WORD);
		tokenMap.put("linkage", Token.RESERVED_WORD);
		tokenMap.put("locally", Token.RESERVED_WORD);
		tokenMap.put("lock", Token.RESERVED_WORD);
		tokenMap.put("lock-holding", Token.RESERVED_WORD);
		tokenMap.put("low-value", Token.RESERVED_WORD);
		tokenMap.put("low-values", Token.RESERVED_WORD);
		tokenMap.put("lowlight [xopen]", Token.RESERVED_WORD);
		tokenMap.put("manual", Token.RESERVED_WORD);
		tokenMap.put("match", Token.RESERVED_WORD);
		tokenMap.put("matches", Token.RESERVED_WORD);
		tokenMap.put("member", Token.RESERVED_WORD);
		tokenMap.put("membership", Token.RESERVED_WORD);
		tokenMap.put("memory", Token.RESERVED_WORD);
		tokenMap.put("merge", Token.RESERVED_WORD);
		tokenMap.put("message", Token.RESERVED_WORD);
		tokenMap.put("mode", Token.RESERVED_WORD);
		tokenMap.put("modify", Token.RESERVED_WORD);
		tokenMap.put("modules", Token.RESERVED_WORD);
		tokenMap.put("move", Token.RESERVED_WORD);
		tokenMap.put("multiple", Token.RESERVED_WORD);
		tokenMap.put("multiply", Token.RESERVED_WORD);
		tokenMap.put("named", Token.RESERVED_WORD);
		tokenMap.put("native", Token.RESERVED_WORD);
		tokenMap.put("negative", Token.RESERVED_WORD);
		tokenMap.put("next", Token.RESERVED_WORD);
		tokenMap.put("no", Token.RESERVED_WORD);
		tokenMap.put("non-null", Token.RESERVED_WORD);
		tokenMap.put("not", Token.RESERVED_WORD);
		tokenMap.put("note", Token.RESERVED_WORD);
		tokenMap.put("null", Token.RESERVED_WORD);
		tokenMap.put("number", Token.RESERVED_WORD);
		tokenMap.put("numeric", Token.RESERVED_WORD);
		tokenMap.put("numeric-edited", Token.RESERVED_WORD);
		tokenMap.put("object-computer", Token.RESERVED_WORD);
		tokenMap.put("object-computer.", Token.RESERVED_WORD);
		tokenMap.put("occurs", Token.RESERVED_WORD);
		tokenMap.put("of", Token.RESERVED_WORD);
		tokenMap.put("off", Token.RESERVED_WORD);
		tokenMap.put("offset", Token.RESERVED_WORD);
		tokenMap.put("omitted", Token.RESERVED_WORD);
		tokenMap.put("on", Token.RESERVED_WORD);
		tokenMap.put("only", Token.RESERVED_WORD);
		tokenMap.put("open", Token.RESERVED_WORD);
		tokenMap.put("optional", Token.RESERVED_WORD);
		tokenMap.put("options [200x]", Token.RESERVED_WORD);
		tokenMap.put("or", Token.RESERVED_WORD);
		tokenMap.put("order", Token.RESERVED_WORD);
		tokenMap.put("otherwise", Token.RESERVED_WORD);
		tokenMap.put("packed-decimal", Token.RESERVED_WORD);
		tokenMap.put("padding", Token.RESERVED_WORD);
		tokenMap.put("page", Token.RESERVED_WORD);
		tokenMap.put("page-counter", Token.RESERVED_WORD);
		tokenMap.put("password", Token.RESERVED_WORD);
		tokenMap.put("perform", Token.RESERVED_WORD);
		tokenMap.put("pf", Token.RESERVED_WORD);
		tokenMap.put("ph", Token.RESERVED_WORD);
		tokenMap.put("pic", Token.RESERVED_WORD);
		tokenMap.put("picture", Token.RESERVED_WORD);
		tokenMap.put("plus", Token.RESERVED_WORD);
		tokenMap.put("pointer", Token.RESERVED_WORD);
		tokenMap.put("position", Token.RESERVED_WORD);
		tokenMap.put("positioning", Token.RESERVED_WORD);
		tokenMap.put("positive", Token.RESERVED_WORD);
		tokenMap.put("previous", Token.RESERVED_WORD);
		tokenMap.put("printing", Token.RESERVED_WORD);
		tokenMap.put("prior", Token.RESERVED_WORD);
		tokenMap.put("procedure", Token.RESERVED_WORD);
		tokenMap.put("procedures", Token.RESERVED_WORD);
		tokenMap.put("proceed", Token.RESERVED_WORD);
		tokenMap.put("program", Token.RESERVED_WORD);
		tokenMap.put("program-id", Token.RESERVED_WORD);
		tokenMap.put("program-id.", Token.RESERVED_WORD);
		tokenMap.put("protected", Token.RESERVED_WORD);
		tokenMap.put("purge", Token.RESERVED_WORD);
		tokenMap.put("queue", Token.RESERVED_WORD);
		tokenMap.put("quote", Token.RESERVED_WORD);
		tokenMap.put("quotes", Token.RESERVED_WORD);
		tokenMap.put("random", Token.RESERVED_WORD);
		tokenMap.put("rd", Token.RESERVED_WORD);
		tokenMap.put("read", Token.RESERVED_WORD);
		tokenMap.put("readers", Token.RESERVED_WORD);
		tokenMap.put("ready", Token.RESERVED_WORD);
		tokenMap.put("realm", Token.RESERVED_WORD);
		tokenMap.put("realms", Token.RESERVED_WORD);
		tokenMap.put("receive", Token.RESERVED_WORD);
		tokenMap.put("reconnect", Token.RESERVED_WORD);
		tokenMap.put("record", Token.RESERVED_WORD);
		tokenMap.put("record-name", Token.RESERVED_WORD);
		tokenMap.put("record-overflow", Token.RESERVED_WORD);
		tokenMap.put("recording", Token.RESERVED_WORD);
		tokenMap.put("records", Token.RESERVED_WORD);
		tokenMap.put("redefines", Token.RESERVED_WORD);
		tokenMap.put("reel", Token.RESERVED_WORD);
		tokenMap.put("reference", Token.RESERVED_WORD);
		tokenMap.put("reference-modifier", Token.RESERVED_WORD);
		tokenMap.put("references", Token.RESERVED_WORD);
		tokenMap.put("regardless", Token.RESERVED_WORD);
		tokenMap.put("relative", Token.RESERVED_WORD);
		tokenMap.put("release", Token.RESERVED_WORD);
		tokenMap.put("reload", Token.RESERVED_WORD);
		tokenMap.put("remainder", Token.RESERVED_WORD);
		tokenMap.put("remarks", Token.RESERVED_WORD);
		tokenMap.put("removal", Token.RESERVED_WORD);
		tokenMap.put("renames", Token.RESERVED_WORD);
		tokenMap.put("reorg-criteria", Token.RESERVED_WORD);
		tokenMap.put("replace", Token.RESERVED_WORD);
		tokenMap.put("replacing", Token.RESERVED_WORD);
		tokenMap.put("report", Token.RESERVED_WORD);
		tokenMap.put("reporting", Token.RESERVED_WORD);
		tokenMap.put("reports", Token.RESERVED_WORD);
		tokenMap.put("required [xopen]", Token.RESERVED_WORD);
		tokenMap.put("rerun", Token.RESERVED_WORD);
		tokenMap.put("reserve", Token.RESERVED_WORD);
		tokenMap.put("reset", Token.RESERVED_WORD);
		tokenMap.put("retaining", Token.RESERVED_WORD);
		tokenMap.put("retrieval", Token.RESERVED_WORD);
		tokenMap.put("return", Token.RESERVED_WORD);
		tokenMap.put("return-code [xopen]", Token.RESERVED_WORD);
		tokenMap.put("returning", Token.RESERVED_WORD);
		tokenMap.put("reverse-video [xopen]", Token.RESERVED_WORD);
		tokenMap.put("reversed", Token.RESERVED_WORD);
		tokenMap.put("rewind", Token.RESERVED_WORD);
		tokenMap.put("rewrite", Token.RESERVED_WORD);
		tokenMap.put("rf", Token.RESERVED_WORD);
		tokenMap.put("rh", Token.RESERVED_WORD);
		tokenMap.put("right", Token.RESERVED_WORD);
		tokenMap.put("rms-current-filename", Token.RESERVED_WORD);
		tokenMap.put("rms-current-sts", Token.RESERVED_WORD);
		tokenMap.put("rms-current-stv", Token.RESERVED_WORD);
		tokenMap.put("rms-filename", Token.RESERVED_WORD);
		tokenMap.put("rms-sts", Token.RESERVED_WORD);
		tokenMap.put("rms-stv", Token.RESERVED_WORD);
		tokenMap.put("rollback", Token.RESERVED_WORD);
		tokenMap.put("rounded", Token.RESERVED_WORD);
		tokenMap.put("run", Token.RESERVED_WORD);
		tokenMap.put("run.", Token.RESERVED_WORD);
		tokenMap.put("same", Token.RESERVED_WORD);
		tokenMap.put("screen [xopen]", Token.RESERVED_WORD);
		tokenMap.put("sd", Token.RESERVED_WORD);
		tokenMap.put("search", Token.RESERVED_WORD);
		tokenMap.put("section", Token.RESERVED_WORD);
		tokenMap.put("section.", Token.RESERVED_WORD);
		tokenMap.put("secure [xopen]", Token.RESERVED_WORD);
		tokenMap.put("security", Token.RESERVED_WORD);
		tokenMap.put("segment", Token.RESERVED_WORD);
		tokenMap.put("segment-limit", Token.RESERVED_WORD);
		tokenMap.put("select", Token.RESERVED_WORD);
		tokenMap.put("send", Token.RESERVED_WORD);
		tokenMap.put("sentence", Token.RESERVED_WORD);
		tokenMap.put("separate", Token.RESERVED_WORD);
		tokenMap.put("sequence", Token.RESERVED_WORD);
		tokenMap.put("sequence-number", Token.RESERVED_WORD);
		tokenMap.put("sequential", Token.RESERVED_WORD);
		tokenMap.put("service", Token.RESERVED_WORD);
		tokenMap.put("set", Token.RESERVED_WORD);
		tokenMap.put("sets", Token.RESERVED_WORD);
		tokenMap.put("sign", Token.RESERVED_WORD);
		tokenMap.put("signed [200x]", Token.RESERVED_WORD);
		tokenMap.put("size", Token.RESERVED_WORD);
		tokenMap.put("skip1", Token.RESERVED_WORD);
		tokenMap.put("skip2", Token.RESERVED_WORD);
		tokenMap.put("skip3", Token.RESERVED_WORD);
		tokenMap.put("sort", Token.RESERVED_WORD);
		tokenMap.put("sort-merge", Token.RESERVED_WORD);
		tokenMap.put("source", Token.RESERVED_WORD);
		tokenMap.put("source-computer", Token.RESERVED_WORD);
		tokenMap.put("source-computer.", Token.RESERVED_WORD);
		tokenMap.put("space", Token.RESERVED_WORD);
		tokenMap.put("spaces", Token.RESERVED_WORD);
		tokenMap.put("special-names", Token.RESERVED_WORD);
		tokenMap.put("standard", Token.RESERVED_WORD);
		tokenMap.put("standard-1", Token.RESERVED_WORD);
		tokenMap.put("standard-2", Token.RESERVED_WORD);
		tokenMap.put("start", Token.RESERVED_WORD);
		tokenMap.put("status", Token.RESERVED_WORD);
		tokenMap.put("stop", Token.RESERVED_WORD);
		tokenMap.put("store", Token.RESERVED_WORD);
		tokenMap.put("stream", Token.RESERVED_WORD);
		tokenMap.put("string", Token.RESERVED_WORD);
		tokenMap.put("sub-queue-1", Token.RESERVED_WORD);
		tokenMap.put("sub-queue-2", Token.RESERVED_WORD);
		tokenMap.put("sub-queue-3", Token.RESERVED_WORD);
		tokenMap.put("sub-schema", Token.RESERVED_WORD);
		tokenMap.put("subtract", Token.RESERVED_WORD);
		tokenMap.put("success", Token.RESERVED_WORD);
		tokenMap.put("sum", Token.RESERVED_WORD);
		tokenMap.put("suppress", Token.RESERVED_WORD);
		tokenMap.put("symbolic", Token.RESERVED_WORD);
		tokenMap.put("sync", Token.RESERVED_WORD);
		tokenMap.put("synchronized", Token.RESERVED_WORD);
		tokenMap.put("table", Token.RESERVED_WORD);
		tokenMap.put("tallying", Token.RESERVED_WORD);
		tokenMap.put("tape", Token.RESERVED_WORD);
		tokenMap.put("tenant", Token.RESERVED_WORD);
		tokenMap.put("terminal", Token.RESERVED_WORD);
		tokenMap.put("terminate", Token.RESERVED_WORD);
		tokenMap.put("test", Token.RESERVED_WORD);
		tokenMap.put("text", Token.RESERVED_WORD);
		tokenMap.put("than", Token.RESERVED_WORD);
		tokenMap.put("then", Token.RESERVED_WORD);
		tokenMap.put("through", Token.RESERVED_WORD);
		tokenMap.put("thru", Token.RESERVED_WORD);
		tokenMap.put("time", Token.RESERVED_WORD);
		tokenMap.put("times", Token.RESERVED_WORD);
		tokenMap.put("times.", Token.RESERVED_WORD);
		tokenMap.put("to", Token.RESERVED_WORD);
		tokenMap.put("top", Token.RESERVED_WORD);
		tokenMap.put("trace", Token.RESERVED_WORD);
		tokenMap.put("trailing", Token.RESERVED_WORD);
		tokenMap.put("transform", Token.RESERVED_WORD);
		tokenMap.put("true", Token.RESERVED_WORD);
		tokenMap.put("type", Token.RESERVED_WORD);
		tokenMap.put("underline [xopen]", Token.RESERVED_WORD);
		tokenMap.put("underlined", Token.RESERVED_WORD);
		tokenMap.put("unequal", Token.RESERVED_WORD);
		tokenMap.put("unit", Token.RESERVED_WORD);
		tokenMap.put("unlock", Token.RESERVED_WORD);
		tokenMap.put("unsigned [200x]", Token.RESERVED_WORD);
		tokenMap.put("unstring", Token.RESERVED_WORD);
		tokenMap.put("until", Token.RESERVED_WORD);
		tokenMap.put("up", Token.RESERVED_WORD);
		tokenMap.put("update", Token.RESERVED_WORD);
		tokenMap.put("updaters", Token.RESERVED_WORD);
		tokenMap.put("upon", Token.RESERVED_WORD);
		tokenMap.put("usage", Token.RESERVED_WORD);
		tokenMap.put("usage-mode", Token.RESERVED_WORD);
		tokenMap.put("use", Token.RESERVED_WORD);
		tokenMap.put("using", Token.RESERVED_WORD);
		tokenMap.put("value", Token.RESERVED_WORD);
		tokenMap.put("values", Token.RESERVED_WORD);
		tokenMap.put("varying", Token.RESERVED_WORD);
		tokenMap.put("vfu-channel", Token.RESERVED_WORD);
		tokenMap.put("wait", Token.RESERVED_WORD);
		tokenMap.put("when", Token.RESERVED_WORD);
		tokenMap.put("where", Token.RESERVED_WORD);
		tokenMap.put("with", Token.RESERVED_WORD);
		tokenMap.put("within", Token.RESERVED_WORD);
		tokenMap.put("words", Token.RESERVED_WORD);
		tokenMap.put("working-storage", Token.RESERVED_WORD);
		tokenMap.put("write", Token.RESERVED_WORD);
		tokenMap.put("writers", Token.RESERVED_WORD);
		tokenMap.put("zero", Token.RESERVED_WORD);
		tokenMap.put("zeroes", Token.RESERVED_WORD);
		tokenMap.put("zeros", Token.RESERVED_WORD);
		tokenMap.put("zeros.", Token.RESERVED_WORD);

		tokenMap.put("Accept", Token.RESERVED_WORD);
		tokenMap.put("Access", Token.RESERVED_WORD);
		tokenMap.put("Add", Token.RESERVED_WORD);
		tokenMap.put("Address", Token.RESERVED_WORD);
		tokenMap.put("Advancing", Token.RESERVED_WORD);
		tokenMap.put("After", Token.RESERVED_WORD);
		tokenMap.put("All", Token.RESERVED_WORD);
		tokenMap.put("Allowing", Token.RESERVED_WORD);
		tokenMap.put("Alphabet", Token.RESERVED_WORD);
		tokenMap.put("Alphabetic", Token.RESERVED_WORD);
		tokenMap.put("Alphabetic--Lower", Token.RESERVED_WORD);
		tokenMap.put("Alphabetic--Upper", Token.RESERVED_WORD);
		tokenMap.put("Alphanumeric", Token.RESERVED_WORD);
		tokenMap.put("Alphanumeric--Edited", Token.RESERVED_WORD);
		tokenMap.put("Also", Token.RESERVED_WORD);
		tokenMap.put("Alter", Token.RESERVED_WORD);
		tokenMap.put("Alternate", Token.RESERVED_WORD);
		tokenMap.put("And", Token.RESERVED_WORD);
		tokenMap.put("Any", Token.RESERVED_WORD);
		tokenMap.put("Apply", Token.RESERVED_WORD);
		tokenMap.put("Are", Token.RESERVED_WORD);
		tokenMap.put("Area", Token.RESERVED_WORD);
		tokenMap.put("Areas", Token.RESERVED_WORD);
		tokenMap.put("Ascending", Token.RESERVED_WORD);
		tokenMap.put("Assign", Token.RESERVED_WORD);
		tokenMap.put("At", Token.RESERVED_WORD);
		tokenMap.put("Author", Token.RESERVED_WORD);
		tokenMap.put("Author.", Token.RESERVED_WORD);
		tokenMap.put("Auto [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Automatic", Token.RESERVED_WORD);
		tokenMap.put("Autoterminate", Token.RESERVED_WORD);
		tokenMap.put("Background-Color [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Batch", Token.RESERVED_WORD);
		tokenMap.put("Before", Token.RESERVED_WORD);
		tokenMap.put("Beginning", Token.RESERVED_WORD);
		tokenMap.put("Bell [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Binary", Token.RESERVED_WORD);
		tokenMap.put("Binary-Char [200x]", Token.RESERVED_WORD);
		tokenMap.put("Binary-Double [200x]", Token.RESERVED_WORD);
		tokenMap.put("Binary-Long [200x]", Token.RESERVED_WORD);
		tokenMap.put("Binary-Short [200x]", Token.RESERVED_WORD);
		tokenMap.put("Bit", Token.RESERVED_WORD);
		tokenMap.put("Bits", Token.RESERVED_WORD);
		tokenMap.put("Blank", Token.RESERVED_WORD);
		tokenMap.put("Blink [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Blinking", Token.RESERVED_WORD);
		tokenMap.put("Block", Token.RESERVED_WORD);
		tokenMap.put("Bold", Token.RESERVED_WORD);
		tokenMap.put("Boolean", Token.RESERVED_WORD);
		tokenMap.put("Bottom", Token.RESERVED_WORD);
		tokenMap.put("By", Token.RESERVED_WORD);
		tokenMap.put("Call", Token.RESERVED_WORD);
		tokenMap.put("Cancel", Token.RESERVED_WORD);
		tokenMap.put("Cd", Token.RESERVED_WORD);
		tokenMap.put("Cf", Token.RESERVED_WORD);
		tokenMap.put("Ch", Token.RESERVED_WORD);
		tokenMap.put("Changed", Token.RESERVED_WORD);
		tokenMap.put("Character", Token.RESERVED_WORD);
		tokenMap.put("Characters", Token.RESERVED_WORD);
		tokenMap.put("Class", Token.RESERVED_WORD);
		tokenMap.put("Clock-Units", Token.RESERVED_WORD);
		tokenMap.put("Close", Token.RESERVED_WORD);
		tokenMap.put("Cobol", Token.RESERVED_WORD);
		tokenMap.put("Code", Token.RESERVED_WORD);
		tokenMap.put("Code-Set", Token.RESERVED_WORD);
		tokenMap.put("Col [200x]", Token.RESERVED_WORD);
		tokenMap.put("Collating", Token.RESERVED_WORD);
		tokenMap.put("Column", Token.RESERVED_WORD);
		tokenMap.put("Comma", Token.RESERVED_WORD);
		tokenMap.put("Commit", Token.RESERVED_WORD);
		tokenMap.put("Common", Token.RESERVED_WORD);
		tokenMap.put("Communication", Token.RESERVED_WORD);
		tokenMap.put("Comp", Token.RESERVED_WORD);
		tokenMap.put("Comp-1", Token.RESERVED_WORD);
		tokenMap.put("Comp-2", Token.RESERVED_WORD);
		tokenMap.put("Comp-3", Token.RESERVED_WORD);
		tokenMap.put("Comp-4", Token.RESERVED_WORD);
		tokenMap.put("Comp-5", Token.RESERVED_WORD);
		tokenMap.put("Comp-6", Token.RESERVED_WORD);
		tokenMap.put("Comp-X", Token.RESERVED_WORD);
		tokenMap.put("Computational", Token.RESERVED_WORD);
		tokenMap.put("Computational-1", Token.RESERVED_WORD);
		tokenMap.put("Computational-2", Token.RESERVED_WORD);
		tokenMap.put("Computational-3", Token.RESERVED_WORD);
		tokenMap.put("Computational-4", Token.RESERVED_WORD);
		tokenMap.put("Computational-5", Token.RESERVED_WORD);
		tokenMap.put("Computational-6", Token.RESERVED_WORD);
		tokenMap.put("Computational-X", Token.RESERVED_WORD);
		tokenMap.put("Compute", Token.RESERVED_WORD);
		tokenMap.put("Concurrent", Token.RESERVED_WORD);
		tokenMap.put("Configuration", Token.RESERVED_WORD);
		tokenMap.put("Configuration Section.", Token.RESERVED_WORD);
		tokenMap.put("Connect", Token.RESERVED_WORD);
		tokenMap.put("Contain", Token.RESERVED_WORD);
		tokenMap.put("Contains", Token.RESERVED_WORD);
		tokenMap.put("Content", Token.RESERVED_WORD);
		tokenMap.put("Continue", Token.RESERVED_WORD);
		tokenMap.put("Control", Token.RESERVED_WORD);
		tokenMap.put("Controls", Token.RESERVED_WORD);
		tokenMap.put("Conversion", Token.RESERVED_WORD);
		tokenMap.put("Converting", Token.RESERVED_WORD);
		tokenMap.put("Copy", Token.RESERVED_WORD);
		tokenMap.put("Core-Index", Token.RESERVED_WORD);
		tokenMap.put("Corr", Token.RESERVED_WORD);
		tokenMap.put("Corresponding", Token.RESERVED_WORD);
		tokenMap.put("Count", Token.RESERVED_WORD);
		tokenMap.put("Crt", Token.RESERVED_WORD);
		tokenMap.put("Currency", Token.RESERVED_WORD);
		tokenMap.put("Current", Token.RESERVED_WORD);
		tokenMap.put("Cursor", Token.RESERVED_WORD);
		tokenMap.put("Data", Token.RESERVED_WORD);
		tokenMap.put("Data Division", Token.RESERVED_WORD);
		tokenMap.put("Data Division.", Token.RESERVED_WORD);
		tokenMap.put("Date", Token.RESERVED_WORD);
		tokenMap.put("Date-Compiled", Token.RESERVED_WORD);
		tokenMap.put("Date-Written", Token.RESERVED_WORD);
		tokenMap.put("Date-Written.", Token.RESERVED_WORD);
		tokenMap.put("Day", Token.RESERVED_WORD);
		tokenMap.put("Day-Of-Week", Token.RESERVED_WORD);
		tokenMap.put("Db", Token.RESERVED_WORD);
		tokenMap.put("Db-Access-Control-Key", Token.RESERVED_WORD);
		tokenMap.put("Db-Condition", Token.RESERVED_WORD);
		tokenMap.put("Db-Current-Record-Id", Token.RESERVED_WORD);
		tokenMap.put("Db-Current-Record-Name", Token.RESERVED_WORD);
		tokenMap.put("Db-Exception", Token.RESERVED_WORD);
		tokenMap.put("Db-Key", Token.RESERVED_WORD);
		tokenMap.put("Db-Record-Name", Token.RESERVED_WORD);
		tokenMap.put("Db-Set-Name", Token.RESERVED_WORD);
		tokenMap.put("Db-Status", Token.RESERVED_WORD);
		tokenMap.put("Db-Uwa", Token.RESERVED_WORD);
		tokenMap.put("Dbcs", Token.RESERVED_WORD);
		tokenMap.put("Dbkey", Token.RESERVED_WORD);
		tokenMap.put("De", Token.RESERVED_WORD);
		tokenMap.put("Debug-Contents", Token.RESERVED_WORD);
		tokenMap.put("Debug-Item", Token.RESERVED_WORD);
		tokenMap.put("Debug-Length", Token.RESERVED_WORD);
		tokenMap.put("Debug-Line", Token.RESERVED_WORD);
		tokenMap.put("Debug-Name", Token.RESERVED_WORD);
		tokenMap.put("Debug-Numeric-Contents", Token.RESERVED_WORD);
		tokenMap.put("Debug-Size", Token.RESERVED_WORD);
		tokenMap.put("Debug-Start", Token.RESERVED_WORD);
		tokenMap.put("Debug-Sub", Token.RESERVED_WORD);
		tokenMap.put("Debug-Sub-1", Token.RESERVED_WORD);
		tokenMap.put("Debug-Sub-2", Token.RESERVED_WORD);
		tokenMap.put("Debug-Sub-3", Token.RESERVED_WORD);
		tokenMap.put("Debug-Sub-Item", Token.RESERVED_WORD);
		tokenMap.put("Debug-Sub-N", Token.RESERVED_WORD);
		tokenMap.put("Debug-Sub-Num", Token.RESERVED_WORD);
		tokenMap.put("Debugging", Token.RESERVED_WORD);
		tokenMap.put("Decimal-Point", Token.RESERVED_WORD);
		tokenMap.put("Declaratives", Token.RESERVED_WORD);
		tokenMap.put("Default", Token.RESERVED_WORD);
		tokenMap.put("Delete", Token.RESERVED_WORD);
		tokenMap.put("Delimited", Token.RESERVED_WORD);
		tokenMap.put("Delimiter", Token.RESERVED_WORD);
		tokenMap.put("Dependency", Token.RESERVED_WORD);
		tokenMap.put("Depending", Token.RESERVED_WORD);
		tokenMap.put("Descending", Token.RESERVED_WORD);
		tokenMap.put("Descriptor", Token.RESERVED_WORD);
		tokenMap.put("Destination", Token.RESERVED_WORD);
		tokenMap.put("Detail", Token.RESERVED_WORD);
		tokenMap.put("Dictionary", Token.RESERVED_WORD);
		tokenMap.put("Disable", Token.RESERVED_WORD);
		tokenMap.put("Disconnect", Token.RESERVED_WORD);
		tokenMap.put("Disp", Token.RESERVED_WORD);
		tokenMap.put("Display", Token.RESERVED_WORD);
		tokenMap.put("Display-1", Token.RESERVED_WORD);
		tokenMap.put("Display-6", Token.RESERVED_WORD);
		tokenMap.put("Display-7", Token.RESERVED_WORD);
		tokenMap.put("Display-9", Token.RESERVED_WORD);
		tokenMap.put("Divide", Token.RESERVED_WORD);
		tokenMap.put("Division", Token.RESERVED_WORD);
		tokenMap.put("Does", Token.RESERVED_WORD);
		tokenMap.put("Down", Token.RESERVED_WORD);
		tokenMap.put("Duplicate", Token.RESERVED_WORD);
		tokenMap.put("Duplicates", Token.RESERVED_WORD);
		tokenMap.put("Echo", Token.RESERVED_WORD);
		tokenMap.put("Editing", Token.RESERVED_WORD);
		tokenMap.put("Egi", Token.RESERVED_WORD);
		tokenMap.put("Eject", Token.RESERVED_WORD);
		tokenMap.put("Else", Token.RESERVED_WORD);
		tokenMap.put("Emi", Token.RESERVED_WORD);
		tokenMap.put("Empty", Token.RESERVED_WORD);
		tokenMap.put("Enable", Token.RESERVED_WORD);
		tokenMap.put("End", Token.RESERVED_WORD);
		tokenMap.put("End-Accept", Token.RESERVED_WORD);
		tokenMap.put("End-Add", Token.RESERVED_WORD);
		tokenMap.put("End-Call", Token.RESERVED_WORD);
		tokenMap.put("End-Commit", Token.RESERVED_WORD);
		tokenMap.put("End-Compute", Token.RESERVED_WORD);
		tokenMap.put("End-Connect", Token.RESERVED_WORD);
		tokenMap.put("End-Delete", Token.RESERVED_WORD);
		tokenMap.put("End-Disconnect", Token.RESERVED_WORD);
		tokenMap.put("End-Divide", Token.RESERVED_WORD);
		tokenMap.put("End-Erase", Token.RESERVED_WORD);
		tokenMap.put("End-Evaluate", Token.RESERVED_WORD);
		tokenMap.put("End-Fetch", Token.RESERVED_WORD);
		tokenMap.put("End-Find", Token.RESERVED_WORD);
		tokenMap.put("End-Finish", Token.RESERVED_WORD);
		tokenMap.put("End-Free", Token.RESERVED_WORD);
		tokenMap.put("End-Get", Token.RESERVED_WORD);
		tokenMap.put("End-If", Token.RESERVED_WORD);
		tokenMap.put("End-Keep", Token.RESERVED_WORD);
		tokenMap.put("End-Modify", Token.RESERVED_WORD);
		tokenMap.put("End-Multiply", Token.RESERVED_WORD);
		tokenMap.put("End-Of-Page", Token.RESERVED_WORD);
		tokenMap.put("End-Perform", Token.RESERVED_WORD);
		tokenMap.put("End-Read", Token.RESERVED_WORD);
		tokenMap.put("End-Ready", Token.RESERVED_WORD);
		tokenMap.put("End-Receive", Token.RESERVED_WORD);
		tokenMap.put("End-Reconnect", Token.RESERVED_WORD);
		tokenMap.put("End-Return", Token.RESERVED_WORD);
		tokenMap.put("End-Rewrite", Token.RESERVED_WORD);
		tokenMap.put("End-Rollback", Token.RESERVED_WORD);
		tokenMap.put("End-Search", Token.RESERVED_WORD);
		tokenMap.put("End-Start", Token.RESERVED_WORD);
		tokenMap.put("End-Store", Token.RESERVED_WORD);
		tokenMap.put("End-String", Token.RESERVED_WORD);
		tokenMap.put("End-Subtract", Token.RESERVED_WORD);
		tokenMap.put("End-Unstring", Token.RESERVED_WORD);
		tokenMap.put("End-Write", Token.RESERVED_WORD);
		tokenMap.put("Ending", Token.RESERVED_WORD);
		tokenMap.put("Enter", Token.RESERVED_WORD);
		tokenMap.put("Entry", Token.RESERVED_WORD);
		tokenMap.put("Environment", Token.RESERVED_WORD);
		tokenMap.put("Eol [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Eop", Token.RESERVED_WORD);
		tokenMap.put("Eos [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Equal", Token.RESERVED_WORD);
		tokenMap.put("Equals", Token.RESERVED_WORD);
		tokenMap.put("Erase [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Error", Token.RESERVED_WORD);
		tokenMap.put("Esi", Token.RESERVED_WORD);
		tokenMap.put("Evaluate", Token.RESERVED_WORD);
		tokenMap.put("Every", Token.RESERVED_WORD);
		tokenMap.put("Examine", Token.RESERVED_WORD);
		tokenMap.put("Exceeds", Token.RESERVED_WORD);
		tokenMap.put("Exception", Token.RESERVED_WORD);
		tokenMap.put("Exclusive", Token.RESERVED_WORD);
		tokenMap.put("Exhibit", Token.RESERVED_WORD);
		tokenMap.put("Exit", Token.RESERVED_WORD);
		tokenMap.put("Exit.", Token.RESERVED_WORD);
		tokenMap.put("Exor", Token.RESERVED_WORD);
		tokenMap.put("Extend", Token.RESERVED_WORD);
		tokenMap.put("External", Token.RESERVED_WORD);
		tokenMap.put("Failure", Token.RESERVED_WORD);
		tokenMap.put("False", Token.RESERVED_WORD);
		tokenMap.put("Fd", Token.RESERVED_WORD);
		tokenMap.put("Fetch", Token.RESERVED_WORD);
		tokenMap.put("File", Token.RESERVED_WORD);
		tokenMap.put("File-Control", Token.RESERVED_WORD);
		tokenMap.put("Filler", Token.RESERVED_WORD);
		tokenMap.put("Final", Token.RESERVED_WORD);
		tokenMap.put("Find", Token.RESERVED_WORD);
		tokenMap.put("Finish", Token.RESERVED_WORD);
		tokenMap.put("First", Token.RESERVED_WORD);
		tokenMap.put("Float-Extended [200x]", Token.RESERVED_WORD);
		tokenMap.put("Float-Long [200x]", Token.RESERVED_WORD);
		tokenMap.put("Float-Short [200x]", Token.RESERVED_WORD);
		tokenMap.put("Footing", Token.RESERVED_WORD);
		tokenMap.put("For", Token.RESERVED_WORD);
		tokenMap.put("Foreground-Color [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Free", Token.RESERVED_WORD);
		tokenMap.put("From", Token.RESERVED_WORD);
		tokenMap.put("Full [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Function", Token.RESERVED_WORD);
		tokenMap.put("Generate", Token.RESERVED_WORD);
		tokenMap.put("Get", Token.RESERVED_WORD);
		tokenMap.put("Giving", Token.RESERVED_WORD);
		tokenMap.put("Global", Token.RESERVED_WORD);
		tokenMap.put("Go", Token.RESERVED_WORD);
		tokenMap.put("Goback", Token.RESERVED_WORD);
		tokenMap.put("Goback.", Token.RESERVED_WORD);
		tokenMap.put("Greater", Token.RESERVED_WORD);
		tokenMap.put("Group", Token.RESERVED_WORD);
		tokenMap.put("Heading", Token.RESERVED_WORD);
		tokenMap.put("High-Value", Token.RESERVED_WORD);
		tokenMap.put("High-Values", Token.RESERVED_WORD);
		tokenMap.put("Highlight [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("I-O", Token.RESERVED_WORD);
		tokenMap.put("I-O-Control", Token.RESERVED_WORD);
		tokenMap.put("Id", Token.RESERVED_WORD);
		tokenMap.put("Ident", Token.RESERVED_WORD);
		tokenMap.put("Identification", Token.RESERVED_WORD);
		tokenMap.put("If", Token.RESERVED_WORD);
		tokenMap.put("In", Token.RESERVED_WORD);
		tokenMap.put("Including", Token.RESERVED_WORD);
		tokenMap.put("Index", Token.RESERVED_WORD);
		tokenMap.put("Indexed", Token.RESERVED_WORD);
		tokenMap.put("Indicate", Token.RESERVED_WORD);
		tokenMap.put("Initial", Token.RESERVED_WORD);
		tokenMap.put("Initialize", Token.RESERVED_WORD);
		tokenMap.put("Initiate", Token.RESERVED_WORD);
		tokenMap.put("Input", Token.RESERVED_WORD);
		tokenMap.put("Input-Output", Token.RESERVED_WORD);
		tokenMap.put("Inspect", Token.RESERVED_WORD);
		tokenMap.put("Installation", Token.RESERVED_WORD);
		tokenMap.put("Into", Token.RESERVED_WORD);
		tokenMap.put("Invalid", Token.RESERVED_WORD);
		tokenMap.put("Is", Token.RESERVED_WORD);
		tokenMap.put("Just", Token.RESERVED_WORD);
		tokenMap.put("Justified", Token.RESERVED_WORD);
		tokenMap.put("Kanji", Token.RESERVED_WORD);
		tokenMap.put("Keep", Token.RESERVED_WORD);
		tokenMap.put("Key", Token.RESERVED_WORD);
		tokenMap.put("Label", Token.RESERVED_WORD);
		tokenMap.put("Last", Token.RESERVED_WORD);
		tokenMap.put("Ld", Token.RESERVED_WORD);
		tokenMap.put("Leading", Token.RESERVED_WORD);
		tokenMap.put("Left", Token.RESERVED_WORD);
		tokenMap.put("Length", Token.RESERVED_WORD);
		tokenMap.put("Less", Token.RESERVED_WORD);
		tokenMap.put("Limit", Token.RESERVED_WORD);
		tokenMap.put("Limits", Token.RESERVED_WORD);
		tokenMap.put("Linage", Token.RESERVED_WORD);
		tokenMap.put("Linage-Counter", Token.RESERVED_WORD);
		tokenMap.put("Line", Token.RESERVED_WORD);
		tokenMap.put("Line-Counter", Token.RESERVED_WORD);
		tokenMap.put("Lines", Token.RESERVED_WORD);
		tokenMap.put("Linkage", Token.RESERVED_WORD);
		tokenMap.put("Locally", Token.RESERVED_WORD);
		tokenMap.put("Lock", Token.RESERVED_WORD);
		tokenMap.put("Lock-Holding", Token.RESERVED_WORD);
		tokenMap.put("Low-Value", Token.RESERVED_WORD);
		tokenMap.put("Low-Values", Token.RESERVED_WORD);
		tokenMap.put("Lowlight [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Manual", Token.RESERVED_WORD);
		tokenMap.put("Match", Token.RESERVED_WORD);
		tokenMap.put("Matches", Token.RESERVED_WORD);
		tokenMap.put("Member", Token.RESERVED_WORD);
		tokenMap.put("Membership", Token.RESERVED_WORD);
		tokenMap.put("Memory", Token.RESERVED_WORD);
		tokenMap.put("Merge", Token.RESERVED_WORD);
		tokenMap.put("Message", Token.RESERVED_WORD);
		tokenMap.put("Mode", Token.RESERVED_WORD);
		tokenMap.put("Modify", Token.RESERVED_WORD);
		tokenMap.put("Modules", Token.RESERVED_WORD);
		tokenMap.put("Move", Token.RESERVED_WORD);
		tokenMap.put("Multiple", Token.RESERVED_WORD);
		tokenMap.put("Multiply", Token.RESERVED_WORD);
		tokenMap.put("Named", Token.RESERVED_WORD);
		tokenMap.put("Native", Token.RESERVED_WORD);
		tokenMap.put("Negative", Token.RESERVED_WORD);
		tokenMap.put("Next", Token.RESERVED_WORD);
		tokenMap.put("No", Token.RESERVED_WORD);
		tokenMap.put("Non-Null", Token.RESERVED_WORD);
		tokenMap.put("Not", Token.RESERVED_WORD);
		tokenMap.put("Note", Token.RESERVED_WORD);
		tokenMap.put("Null", Token.RESERVED_WORD);
		tokenMap.put("Number", Token.RESERVED_WORD);
		tokenMap.put("Numeric", Token.RESERVED_WORD);
		tokenMap.put("Numeric-Edited", Token.RESERVED_WORD);
		tokenMap.put("Object-Computer", Token.RESERVED_WORD);
		tokenMap.put("Object-Computer.", Token.RESERVED_WORD);
		tokenMap.put("Occurs", Token.RESERVED_WORD);
		tokenMap.put("Of", Token.RESERVED_WORD);
		tokenMap.put("Off", Token.RESERVED_WORD);
		tokenMap.put("Offset", Token.RESERVED_WORD);
		tokenMap.put("Omitted", Token.RESERVED_WORD);
		tokenMap.put("On", Token.RESERVED_WORD);
		tokenMap.put("Only", Token.RESERVED_WORD);
		tokenMap.put("Open", Token.RESERVED_WORD);
		tokenMap.put("Optional", Token.RESERVED_WORD);
		tokenMap.put("Options [200x]", Token.RESERVED_WORD);
		tokenMap.put("Or", Token.RESERVED_WORD);
		tokenMap.put("Order", Token.RESERVED_WORD);
		tokenMap.put("Otherwise", Token.RESERVED_WORD);
		tokenMap.put("Packed-Decimal", Token.RESERVED_WORD);
		tokenMap.put("Padding", Token.RESERVED_WORD);
		tokenMap.put("Page", Token.RESERVED_WORD);
		tokenMap.put("Page-Counter", Token.RESERVED_WORD);
		tokenMap.put("Password", Token.RESERVED_WORD);
		tokenMap.put("Perform", Token.RESERVED_WORD);
		tokenMap.put("Pf", Token.RESERVED_WORD);
		tokenMap.put("Ph", Token.RESERVED_WORD);
		tokenMap.put("Pic", Token.RESERVED_WORD);
		tokenMap.put("Picture", Token.RESERVED_WORD);
		tokenMap.put("Plus", Token.RESERVED_WORD);
		tokenMap.put("Pointer", Token.RESERVED_WORD);
		tokenMap.put("Position", Token.RESERVED_WORD);
		tokenMap.put("Positioning", Token.RESERVED_WORD);
		tokenMap.put("Positive", Token.RESERVED_WORD);
		tokenMap.put("Previous", Token.RESERVED_WORD);
		tokenMap.put("Printing", Token.RESERVED_WORD);
		tokenMap.put("Prior", Token.RESERVED_WORD);
		tokenMap.put("Procedure", Token.RESERVED_WORD);
		tokenMap.put("Procedures", Token.RESERVED_WORD);
		tokenMap.put("Proceed", Token.RESERVED_WORD);
		tokenMap.put("Program", Token.RESERVED_WORD);
		tokenMap.put("Program-Id", Token.RESERVED_WORD);
		tokenMap.put("Program-Id.", Token.RESERVED_WORD);
		tokenMap.put("Protected", Token.RESERVED_WORD);
		tokenMap.put("Purge", Token.RESERVED_WORD);
		tokenMap.put("Queue", Token.RESERVED_WORD);
		tokenMap.put("Quote", Token.RESERVED_WORD);
		tokenMap.put("Quotes", Token.RESERVED_WORD);
		tokenMap.put("Random", Token.RESERVED_WORD);
		tokenMap.put("Rd", Token.RESERVED_WORD);
		tokenMap.put("Read", Token.RESERVED_WORD);
		tokenMap.put("Readers", Token.RESERVED_WORD);
		tokenMap.put("Ready", Token.RESERVED_WORD);
		tokenMap.put("Realm", Token.RESERVED_WORD);
		tokenMap.put("Realms", Token.RESERVED_WORD);
		tokenMap.put("Receive", Token.RESERVED_WORD);
		tokenMap.put("Reconnect", Token.RESERVED_WORD);
		tokenMap.put("Record", Token.RESERVED_WORD);
		tokenMap.put("Record-Name", Token.RESERVED_WORD);
		tokenMap.put("Record-Overflow", Token.RESERVED_WORD);
		tokenMap.put("Recording", Token.RESERVED_WORD);
		tokenMap.put("Records", Token.RESERVED_WORD);
		tokenMap.put("Redefines", Token.RESERVED_WORD);
		tokenMap.put("Reel", Token.RESERVED_WORD);
		tokenMap.put("Reference", Token.RESERVED_WORD);
		tokenMap.put("Reference-Modifier", Token.RESERVED_WORD);
		tokenMap.put("References", Token.RESERVED_WORD);
		tokenMap.put("Regardless", Token.RESERVED_WORD);
		tokenMap.put("Relative", Token.RESERVED_WORD);
		tokenMap.put("Release", Token.RESERVED_WORD);
		tokenMap.put("Reload", Token.RESERVED_WORD);
		tokenMap.put("Remainder", Token.RESERVED_WORD);
		tokenMap.put("Remarks", Token.RESERVED_WORD);
		tokenMap.put("Removal", Token.RESERVED_WORD);
		tokenMap.put("Renames", Token.RESERVED_WORD);
		tokenMap.put("Reorg-Criteria", Token.RESERVED_WORD);
		tokenMap.put("Replace", Token.RESERVED_WORD);
		tokenMap.put("Replacing", Token.RESERVED_WORD);
		tokenMap.put("Report", Token.RESERVED_WORD);
		tokenMap.put("Reporting", Token.RESERVED_WORD);
		tokenMap.put("Reports", Token.RESERVED_WORD);
		tokenMap.put("Required [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Rerun", Token.RESERVED_WORD);
		tokenMap.put("Reserve", Token.RESERVED_WORD);
		tokenMap.put("Reset", Token.RESERVED_WORD);
		tokenMap.put("Retaining", Token.RESERVED_WORD);
		tokenMap.put("Retrieval", Token.RESERVED_WORD);
		tokenMap.put("Return", Token.RESERVED_WORD);
		tokenMap.put("Return-Code [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Returning", Token.RESERVED_WORD);
		tokenMap.put("Reverse-Video [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Reversed", Token.RESERVED_WORD);
		tokenMap.put("Rewind", Token.RESERVED_WORD);
		tokenMap.put("Rewrite", Token.RESERVED_WORD);
		tokenMap.put("Rf", Token.RESERVED_WORD);
		tokenMap.put("Rh", Token.RESERVED_WORD);
		tokenMap.put("Right", Token.RESERVED_WORD);
		tokenMap.put("Rms-Current-Filename", Token.RESERVED_WORD);
		tokenMap.put("Rms-Current-Sts", Token.RESERVED_WORD);
		tokenMap.put("Rms-Current-Stv", Token.RESERVED_WORD);
		tokenMap.put("Rms-Filename", Token.RESERVED_WORD);
		tokenMap.put("Rms-Sts", Token.RESERVED_WORD);
		tokenMap.put("Rms-Stv", Token.RESERVED_WORD);
		tokenMap.put("Rollback", Token.RESERVED_WORD);
		tokenMap.put("Rounded", Token.RESERVED_WORD);
		tokenMap.put("Run", Token.RESERVED_WORD);
		tokenMap.put("Run.", Token.RESERVED_WORD);
		tokenMap.put("Same", Token.RESERVED_WORD);
		tokenMap.put("Screen [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Sd", Token.RESERVED_WORD);
		tokenMap.put("Search", Token.RESERVED_WORD);
		tokenMap.put("Section", Token.RESERVED_WORD);
		tokenMap.put("Section.", Token.RESERVED_WORD);
		tokenMap.put("Secure [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Security", Token.RESERVED_WORD);
		tokenMap.put("Segment", Token.RESERVED_WORD);
		tokenMap.put("Segment-Limit", Token.RESERVED_WORD);
		tokenMap.put("Select", Token.RESERVED_WORD);
		tokenMap.put("Send", Token.RESERVED_WORD);
		tokenMap.put("Sentence", Token.RESERVED_WORD);
		tokenMap.put("Separate", Token.RESERVED_WORD);
		tokenMap.put("Sequence", Token.RESERVED_WORD);
		tokenMap.put("Sequence-Number", Token.RESERVED_WORD);
		tokenMap.put("Sequential", Token.RESERVED_WORD);
		tokenMap.put("Service", Token.RESERVED_WORD);
		tokenMap.put("Set", Token.RESERVED_WORD);
		tokenMap.put("Sets", Token.RESERVED_WORD);
		tokenMap.put("Sign", Token.RESERVED_WORD);
		tokenMap.put("Signed [200x]", Token.RESERVED_WORD);
		tokenMap.put("Size", Token.RESERVED_WORD);
		tokenMap.put("Skip1", Token.RESERVED_WORD);
		tokenMap.put("Skip2", Token.RESERVED_WORD);
		tokenMap.put("Skip3", Token.RESERVED_WORD);
		tokenMap.put("Sort", Token.RESERVED_WORD);
		tokenMap.put("Sort-Merge", Token.RESERVED_WORD);
		tokenMap.put("Source", Token.RESERVED_WORD);
		tokenMap.put("Source-Computer", Token.RESERVED_WORD);
		tokenMap.put("Source-Computer.", Token.RESERVED_WORD);
		tokenMap.put("Space", Token.RESERVED_WORD);
		tokenMap.put("Spaces", Token.RESERVED_WORD);
		tokenMap.put("Special-Names", Token.RESERVED_WORD);
		tokenMap.put("Standard", Token.RESERVED_WORD);
		tokenMap.put("Standard-1", Token.RESERVED_WORD);
		tokenMap.put("Standard-2", Token.RESERVED_WORD);
		tokenMap.put("Start", Token.RESERVED_WORD);
		tokenMap.put("Status", Token.RESERVED_WORD);
		tokenMap.put("Stop", Token.RESERVED_WORD);
		tokenMap.put("Store", Token.RESERVED_WORD);
		tokenMap.put("Stream", Token.RESERVED_WORD);
		tokenMap.put("String", Token.RESERVED_WORD);
		tokenMap.put("Sub-Queue-1", Token.RESERVED_WORD);
		tokenMap.put("Sub-Queue-2", Token.RESERVED_WORD);
		tokenMap.put("Sub-Queue-3", Token.RESERVED_WORD);
		tokenMap.put("Sub-Schema", Token.RESERVED_WORD);
		tokenMap.put("Subtract", Token.RESERVED_WORD);
		tokenMap.put("Success", Token.RESERVED_WORD);
		tokenMap.put("Sum", Token.RESERVED_WORD);
		tokenMap.put("Suppress", Token.RESERVED_WORD);
		tokenMap.put("Symbolic", Token.RESERVED_WORD);
		tokenMap.put("Sync", Token.RESERVED_WORD);
		tokenMap.put("Synchronized", Token.RESERVED_WORD);
		tokenMap.put("Table", Token.RESERVED_WORD);
		tokenMap.put("Tallying", Token.RESERVED_WORD);
		tokenMap.put("Tape", Token.RESERVED_WORD);
		tokenMap.put("Tenant", Token.RESERVED_WORD);
		tokenMap.put("Terminal", Token.RESERVED_WORD);
		tokenMap.put("Terminate", Token.RESERVED_WORD);
		tokenMap.put("Test", Token.RESERVED_WORD);
		tokenMap.put("Text", Token.RESERVED_WORD);
		tokenMap.put("Than", Token.RESERVED_WORD);
		tokenMap.put("Then", Token.RESERVED_WORD);
		tokenMap.put("Through", Token.RESERVED_WORD);
		tokenMap.put("Thru", Token.RESERVED_WORD);
		tokenMap.put("Time", Token.RESERVED_WORD);
		tokenMap.put("Times", Token.RESERVED_WORD);
		tokenMap.put("Times.", Token.RESERVED_WORD);
		tokenMap.put("To", Token.RESERVED_WORD);
		tokenMap.put("Top", Token.RESERVED_WORD);
		tokenMap.put("Trace", Token.RESERVED_WORD);
		tokenMap.put("Trailing", Token.RESERVED_WORD);
		tokenMap.put("Transform", Token.RESERVED_WORD);
		tokenMap.put("True", Token.RESERVED_WORD);
		tokenMap.put("Type", Token.RESERVED_WORD);
		tokenMap.put("Underline [Xopen]", Token.RESERVED_WORD);
		tokenMap.put("Underlined", Token.RESERVED_WORD);
		tokenMap.put("Unequal", Token.RESERVED_WORD);
		tokenMap.put("Unit", Token.RESERVED_WORD);
		tokenMap.put("Unlock", Token.RESERVED_WORD);
		tokenMap.put("Unsigned [200x]", Token.RESERVED_WORD);
		tokenMap.put("Unstring", Token.RESERVED_WORD);
		tokenMap.put("Until", Token.RESERVED_WORD);
		tokenMap.put("Up", Token.RESERVED_WORD);
		tokenMap.put("Update", Token.RESERVED_WORD);
		tokenMap.put("Updaters", Token.RESERVED_WORD);
		tokenMap.put("Upon", Token.RESERVED_WORD);
		tokenMap.put("Usage", Token.RESERVED_WORD);
		tokenMap.put("Usage-Mode", Token.RESERVED_WORD);
		tokenMap.put("Use", Token.RESERVED_WORD);
		tokenMap.put("Using", Token.RESERVED_WORD);
		tokenMap.put("Value", Token.RESERVED_WORD);
		tokenMap.put("Values", Token.RESERVED_WORD);
		tokenMap.put("Varying", Token.RESERVED_WORD);
		tokenMap.put("Vfu-Channel", Token.RESERVED_WORD);
		tokenMap.put("Wait", Token.RESERVED_WORD);
		tokenMap.put("When", Token.RESERVED_WORD);
		tokenMap.put("Where", Token.RESERVED_WORD);
		tokenMap.put("With", Token.RESERVED_WORD);
		tokenMap.put("Within", Token.RESERVED_WORD);
		tokenMap.put("Words", Token.RESERVED_WORD);
		tokenMap.put("Working-Storage", Token.RESERVED_WORD);
		tokenMap.put("Write", Token.RESERVED_WORD);
		tokenMap.put("Writers", Token.RESERVED_WORD);
		tokenMap.put("Zero", Token.RESERVED_WORD);
		tokenMap.put("Zeroes", Token.RESERVED_WORD);
		tokenMap.put("Zeros", Token.RESERVED_WORD);
		tokenMap.put("Zeros.", Token.RESERVED_WORD);

		tokenMap.put("ADD-DURATION", Token.FUNCTION);
		tokenMap.put("ANNUITY", Token.FUNCTION);
		tokenMap.put("ASIN", Token.FUNCTION);
		tokenMap.put("ATAN", Token.FUNCTION);
		tokenMap.put("CHAR", Token.FUNCTION);
		tokenMap.put("CONVERT-DATE-TIME", Token.FUNCTION);
		tokenMap.put("COS", Token.FUNCTION);
		tokenMap.put("CURRENT-DATE", Token.FUNCTION);
		tokenMap.put("DATE-OF-INTEGER", Token.FUNCTION);
		tokenMap.put("DAY-OF-INTEGER", Token.FUNCTION);
		tokenMap.put("DAY-TO-YYYYDDD", Token.FUNCTION);
		tokenMap.put("EXTRACT-DATE-TIME", Token.FUNCTION);
		tokenMap.put("DATE-TO-YYYYMMDD", Token.FUNCTION);
		tokenMap.put("DISPLAY-OF", Token.FUNCTION);
		tokenMap.put("FACTORIAL", Token.FUNCTION);
		tokenMap.put("FIND-DURATION", Token.FUNCTION);
		tokenMap.put("INTEGER", Token.FUNCTION);
		tokenMap.put("INTEGER-OF-DATE", Token.FUNCTION);
		tokenMap.put("INTEGER-OF-DAY", Token.FUNCTION);
		tokenMap.put("INTEGER-PART", Token.FUNCTION);
		tokenMap.put("LENGTH", Token.FUNCTION);
		tokenMap.put("LOCALE-DATE", Token.FUNCTION);
		tokenMap.put("LOCALE-TIME", Token.FUNCTION);
		tokenMap.put("LOG", Token.FUNCTION);
		tokenMap.put("LOG10", Token.FUNCTION);
		tokenMap.put("LOWER-CASE", Token.FUNCTION);
		tokenMap.put("MAX", Token.FUNCTION);
		tokenMap.put("MEAN", Token.FUNCTION);
		tokenMap.put("MEDIAN", Token.FUNCTION);
		tokenMap.put("MIDRANGE", Token.FUNCTION);
		tokenMap.put("MIN", Token.FUNCTION);
		tokenMap.put("MOD", Token.FUNCTION);
		tokenMap.put("NATIONAL-OF", Token.FUNCTION);
		tokenMap.put("NUMVAL", Token.FUNCTION);
		tokenMap.put("NUMVAL-C", Token.FUNCTION);
		tokenMap.put("ORD", Token.FUNCTION);
		tokenMap.put("ORD-MAX", Token.FUNCTION);
		tokenMap.put("ORD-MIN", Token.FUNCTION);
		tokenMap.put("PRESENT-VALUE", Token.FUNCTION);
		tokenMap.put("RANDOM", Token.FUNCTION);
		tokenMap.put("RANGE", Token.FUNCTION);
		tokenMap.put("REM", Token.FUNCTION);
		tokenMap.put("REVERSE", Token.FUNCTION);
		tokenMap.put("SIN", Token.FUNCTION);
		tokenMap.put("SQRT", Token.FUNCTION);
		tokenMap.put("STANDARD-DEVIATION", Token.FUNCTION);
		tokenMap.put("SUBTRACT-DURATION", Token.FUNCTION);
		tokenMap.put("SUM", Token.FUNCTION);
		tokenMap.put("TAN", Token.FUNCTION);
		tokenMap.put("TEST-DATE-TIME", Token.FUNCTION);
		tokenMap.put("TRIM", Token.FUNCTION);
		tokenMap.put("TRIML", Token.FUNCTION);
		tokenMap.put("TRIMR", Token.FUNCTION);
		tokenMap.put("UPPER-CASE", Token.FUNCTION);
		tokenMap.put("VARIANCE", Token.FUNCTION);
		tokenMap.put("UTF8STRING", Token.FUNCTION);
		tokenMap.put("WHEN-COMPILED", Token.FUNCTION);
		tokenMap.put("YEAR-TO-YYYY", Token.FUNCTION);

		tokenMap.put("acos", Token.FUNCTION);
		tokenMap.put("add-duration", Token.FUNCTION);
		tokenMap.put("annuity", Token.FUNCTION);
		tokenMap.put("asin", Token.FUNCTION);
		tokenMap.put("atan", Token.FUNCTION);
		tokenMap.put("char", Token.FUNCTION);
		tokenMap.put("convert-date-time", Token.FUNCTION);
		tokenMap.put("cos", Token.FUNCTION);
		tokenMap.put("current-date", Token.FUNCTION);
		tokenMap.put("date-of-integer", Token.FUNCTION);
		tokenMap.put("day-of-integer", Token.FUNCTION);
		tokenMap.put("day-to-yyyyddd", Token.FUNCTION);
		tokenMap.put("extract-date-time", Token.FUNCTION);
		tokenMap.put("date-to-yyyymmdd", Token.FUNCTION);
		tokenMap.put("display-of", Token.FUNCTION);
		tokenMap.put("factorial", Token.FUNCTION);
		tokenMap.put("find-duration", Token.FUNCTION);
		tokenMap.put("integer", Token.FUNCTION);
		tokenMap.put("integer-of-date", Token.FUNCTION);
		tokenMap.put("integer-of-day", Token.FUNCTION);
		tokenMap.put("integer-part", Token.FUNCTION);
		tokenMap.put("length", Token.FUNCTION);
		tokenMap.put("locale-date", Token.FUNCTION);
		tokenMap.put("locale-time", Token.FUNCTION);
		tokenMap.put("log", Token.FUNCTION);
		tokenMap.put("log10", Token.FUNCTION);
		tokenMap.put("lower-case", Token.FUNCTION);
		tokenMap.put("max", Token.FUNCTION);
		tokenMap.put("mean", Token.FUNCTION);
		tokenMap.put("median", Token.FUNCTION);
		tokenMap.put("midrange", Token.FUNCTION);
		tokenMap.put("min", Token.FUNCTION);
		tokenMap.put("mod", Token.FUNCTION);
		tokenMap.put("national-of", Token.FUNCTION);
		tokenMap.put("numval", Token.FUNCTION);
		tokenMap.put("numval-c", Token.FUNCTION);
		tokenMap.put("ord", Token.FUNCTION);
		tokenMap.put("ord-max", Token.FUNCTION);
		tokenMap.put("ord-min", Token.FUNCTION);
		tokenMap.put("present-value", Token.FUNCTION);
		tokenMap.put("random", Token.FUNCTION);
		tokenMap.put("range", Token.FUNCTION);
		tokenMap.put("rem", Token.FUNCTION);
		tokenMap.put("reverse", Token.FUNCTION);
		tokenMap.put("sin", Token.FUNCTION);
		tokenMap.put("sqrt", Token.FUNCTION);
		tokenMap.put("standard-deviation", Token.FUNCTION);
		tokenMap.put("subtract-duration", Token.FUNCTION);
		tokenMap.put("sum", Token.FUNCTION);
		tokenMap.put("tan", Token.FUNCTION);
		tokenMap.put("test-date-time", Token.FUNCTION);
		tokenMap.put("trim", Token.FUNCTION);
		tokenMap.put("triml", Token.FUNCTION);
		tokenMap.put("trimr", Token.FUNCTION);
		tokenMap.put("upper-case", Token.FUNCTION);
		tokenMap.put("variance", Token.FUNCTION);
		tokenMap.put("utf8string", Token.FUNCTION);
		tokenMap.put("when-compiled", Token.FUNCTION);
		tokenMap.put("year-to-yyyy", Token.FUNCTION);

		tokenMap.put("Acos", Token.FUNCTION);
		tokenMap.put("Add-Duration", Token.FUNCTION);
		tokenMap.put("Annuity", Token.FUNCTION);
		tokenMap.put("Asin", Token.FUNCTION);
		tokenMap.put("Atan", Token.FUNCTION);
		tokenMap.put("Char", Token.FUNCTION);
		tokenMap.put("Convert-Date-Time", Token.FUNCTION);
		tokenMap.put("Cos", Token.FUNCTION);
		tokenMap.put("Current-Date", Token.FUNCTION);
		tokenMap.put("Date-Of-Integer", Token.FUNCTION);
		tokenMap.put("Day-Of-Integer", Token.FUNCTION);
		tokenMap.put("Day-To-Yyyyddd", Token.FUNCTION);
		tokenMap.put("Extract-Date-Time", Token.FUNCTION);
		tokenMap.put("Date-To-Yyyymmdd", Token.FUNCTION);
		tokenMap.put("Display-Of", Token.FUNCTION);
		tokenMap.put("Factorial", Token.FUNCTION);
		tokenMap.put("Find-Duration", Token.FUNCTION);
		tokenMap.put("Integer", Token.FUNCTION);
		tokenMap.put("Integer-Of-Date", Token.FUNCTION);
		tokenMap.put("Integer-Of-Day", Token.FUNCTION);
		tokenMap.put("Integer-Part", Token.FUNCTION);
		tokenMap.put("Length", Token.FUNCTION);
		tokenMap.put("Locale-Date", Token.FUNCTION);
		tokenMap.put("Locale-Time", Token.FUNCTION);
		tokenMap.put("Log", Token.FUNCTION);
		tokenMap.put("Log10", Token.FUNCTION);
		tokenMap.put("Lower-Case", Token.FUNCTION);
		tokenMap.put("Max", Token.FUNCTION);
		tokenMap.put("Mean", Token.FUNCTION);
		tokenMap.put("Median", Token.FUNCTION);
		tokenMap.put("Midrange", Token.FUNCTION);
		tokenMap.put("Min", Token.FUNCTION);
		tokenMap.put("Mod", Token.FUNCTION);
		tokenMap.put("National-Of", Token.FUNCTION);
		tokenMap.put("Numval", Token.FUNCTION);
		tokenMap.put("Numval-C", Token.FUNCTION);
		tokenMap.put("Ord", Token.FUNCTION);
		tokenMap.put("Ord-Max", Token.FUNCTION);
		tokenMap.put("Ord-Min", Token.FUNCTION);
		tokenMap.put("Present-Value", Token.FUNCTION);
		tokenMap.put("Random", Token.FUNCTION);
		tokenMap.put("Range", Token.FUNCTION);
		tokenMap.put("Rem", Token.FUNCTION);
		tokenMap.put("Reverse", Token.FUNCTION);
		tokenMap.put("Sin", Token.FUNCTION);
		tokenMap.put("Sqrt", Token.FUNCTION);
		tokenMap.put("Standard-Deviation", Token.FUNCTION);
		tokenMap.put("Subtract-Duration", Token.FUNCTION);
		tokenMap.put("Sum", Token.FUNCTION);
		tokenMap.put("Tan", Token.FUNCTION);
		tokenMap.put("Test-Date-Time", Token.FUNCTION);
		tokenMap.put("Trim", Token.FUNCTION);
		tokenMap.put("Triml", Token.FUNCTION);
		tokenMap.put("Trimr", Token.FUNCTION);
		tokenMap.put("Upper-Case", Token.FUNCTION);
		tokenMap.put("Variance", Token.FUNCTION);
		tokenMap.put("Utf8string", Token.FUNCTION);
		tokenMap.put("When-Compiled", Token.FUNCTION);
		tokenMap.put("Year-To-Yyyy", Token.FUNCTION);

		return tokenMap;
	}

}
